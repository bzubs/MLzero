window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"mlzero": {"fullname": "mlzero", "modulename": "mlzero", "kind": "module", "doc": "<p></p>\n"}, "mlzero.classifiers": {"fullname": "mlzero.classifiers", "modulename": "mlzero.classifiers", "kind": "module", "doc": "<p></p>\n"}, "mlzero.classifiers.adaLine": {"fullname": "mlzero.classifiers.adaLine", "modulename": "mlzero.classifiers.adaLine", "kind": "module", "doc": "<p></p>\n"}, "mlzero.classifiers.adaLine.AdaLineGD": {"fullname": "mlzero.classifiers.adaLine.AdaLineGD", "modulename": "mlzero.classifiers.adaLine", "qualname": "AdaLineGD", "kind": "class", "doc": "<p>AdaLineGD implements the Adaptive Linear Neuron (Adaline) algorithm using gradient descent.</p>\n", "bases": "mlzero.classifiers.baseClassifier.BaseClassifier"}, "mlzero.classifiers.adaLine.AdaLineGD.__init__": {"fullname": "mlzero.classifiers.adaLine.AdaLineGD.__init__", "modulename": "mlzero.classifiers.adaLine", "qualname": "AdaLineGD.__init__", "kind": "function", "doc": "<p>Initialize the AdaLineGD model.</p>\n\n<p>Parameters:\n    lr (float): Learning rate for gradient descent.\n    n_iter (int): Number of training iterations.\n    random_state (int): Seed for reproducibility.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.01</span>, </span><span class=\"param\"><span class=\"n\">n_iter</span><span class=\"o\">=</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span></span>)</span>"}, "mlzero.classifiers.adaLine.AdaLineGD.lr": {"fullname": "mlzero.classifiers.adaLine.AdaLineGD.lr", "modulename": "mlzero.classifiers.adaLine", "qualname": "AdaLineGD.lr", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.adaLine.AdaLineGD.n_iter": {"fullname": "mlzero.classifiers.adaLine.AdaLineGD.n_iter", "modulename": "mlzero.classifiers.adaLine", "qualname": "AdaLineGD.n_iter", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.adaLine.AdaLineGD.random_state": {"fullname": "mlzero.classifiers.adaLine.AdaLineGD.random_state", "modulename": "mlzero.classifiers.adaLine", "qualname": "AdaLineGD.random_state", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"fullname": "mlzero.classifiers.adaLine.AdaLineGD.fit", "modulename": "mlzero.classifiers.adaLine", "qualname": "AdaLineGD.fit", "kind": "function", "doc": "<p>Fit the AdaLineGD model using gradient descent.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    y (np.ndarray): Target values.</p>\n\n<p>Returns:\n    self: Fitted estimator.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"fullname": "mlzero.classifiers.adaLine.AdaLineGD.net_input", "modulename": "mlzero.classifiers.adaLine", "qualname": "AdaLineGD.net_input", "kind": "function", "doc": "<p>Calculate the net input (weighted sum plus bias).</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Net input values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"fullname": "mlzero.classifiers.adaLine.AdaLineGD.activation", "modulename": "mlzero.classifiers.adaLine", "qualname": "AdaLineGD.activation", "kind": "function", "doc": "<p>Compute the activation (identity function for AdaLine).</p>\n\n<p>Parameters:\n    X (np.ndarray): Net input values.</p>\n\n<p>Returns:\n    np.ndarray: Activated values (same as input).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"fullname": "mlzero.classifiers.adaLine.AdaLineGD.predict", "modulename": "mlzero.classifiers.adaLine", "qualname": "AdaLineGD.predict", "kind": "function", "doc": "<p>Predict binary class labels for input data X.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    threshold (float): Threshold for classifying as positive class.</p>\n\n<p>Returns:\n    np.ndarray: Predicted class labels (0 or 1).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.5</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"fullname": "mlzero.classifiers.adaLine.AdaLineGD.get_params", "modulename": "mlzero.classifiers.adaLine", "qualname": "AdaLineGD.get_params", "kind": "function", "doc": "<p>Get parameters of the AdaLineGD model.</p>\n\n<p>Returns:\n    dict: Model parameters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"fullname": "mlzero.classifiers.adaLine.AdaLineGD.set_params", "modulename": "mlzero.classifiers.adaLine", "qualname": "AdaLineGD.set_params", "kind": "function", "doc": "<p>Set parameters of the AdaLineGD model.</p>\n\n<p>Parameters:\n    **params: Model parameters to set.</p>\n\n<p>Returns:\n    self: Updated estimator.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">params</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.baseClassifier": {"fullname": "mlzero.classifiers.baseClassifier", "modulename": "mlzero.classifiers.baseClassifier", "kind": "module", "doc": "<p></p>\n"}, "mlzero.classifiers.baseClassifier.BaseClassifier": {"fullname": "mlzero.classifiers.baseClassifier.BaseClassifier", "modulename": "mlzero.classifiers.baseClassifier", "qualname": "BaseClassifier", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "abc.ABC"}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"fullname": "mlzero.classifiers.baseClassifier.BaseClassifier.fit", "modulename": "mlzero.classifiers.baseClassifier", "qualname": "BaseClassifier.fit", "kind": "function", "doc": "<p>Fit the classifier to the training data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"fullname": "mlzero.classifiers.baseClassifier.BaseClassifier.predict", "modulename": "mlzero.classifiers.baseClassifier", "qualname": "BaseClassifier.predict", "kind": "function", "doc": "<p>Predict class labels for samples in X.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.baseClassifier.BaseClassifier.score": {"fullname": "mlzero.classifiers.baseClassifier.BaseClassifier.score", "modulename": "mlzero.classifiers.baseClassifier", "qualname": "BaseClassifier.score", "kind": "function", "doc": "<p>Default implementation of accuracy score.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.kNNClassifier": {"fullname": "mlzero.classifiers.kNNClassifier", "modulename": "mlzero.classifiers.kNNClassifier", "kind": "module", "doc": "<p></p>\n"}, "mlzero.classifiers.kNNClassifier.kNNClassifier": {"fullname": "mlzero.classifiers.kNNClassifier.kNNClassifier", "modulename": "mlzero.classifiers.kNNClassifier", "qualname": "kNNClassifier", "kind": "class", "doc": "<p>kNNClassifier implements the k-Nearest Neighbors classification algorithm.</p>\n", "bases": "mlzero.classifiers.baseClassifier.BaseClassifier"}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"fullname": "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__", "modulename": "mlzero.classifiers.kNNClassifier", "qualname": "kNNClassifier.__init__", "kind": "function", "doc": "<p>Initialize the kNNClassifier.</p>\n\n<p>Parameters:\n    k (int): Number of neighbors to use.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">5</span></span>)</span>"}, "mlzero.classifiers.kNNClassifier.kNNClassifier.n_neighbors": {"fullname": "mlzero.classifiers.kNNClassifier.kNNClassifier.n_neighbors", "modulename": "mlzero.classifiers.kNNClassifier", "qualname": "kNNClassifier.n_neighbors", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.kNNClassifier.kNNClassifier.X_train": {"fullname": "mlzero.classifiers.kNNClassifier.kNNClassifier.X_train", "modulename": "mlzero.classifiers.kNNClassifier", "qualname": "kNNClassifier.X_train", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.kNNClassifier.kNNClassifier.y_train": {"fullname": "mlzero.classifiers.kNNClassifier.kNNClassifier.y_train", "modulename": "mlzero.classifiers.kNNClassifier", "qualname": "kNNClassifier.y_train", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"fullname": "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance", "modulename": "mlzero.classifiers.kNNClassifier", "qualname": "kNNClassifier.calc_distance", "kind": "function", "doc": "<p>Calculate the Euclidean distance between two points.</p>\n\n<p>Parameters:\n    pointA (np.ndarray): First point.\n    pointB (np.ndarray): Second point.</p>\n\n<p>Returns:\n    float: Euclidean distance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pointA</span>, </span><span class=\"param\"><span class=\"n\">pointB</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"fullname": "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count", "modulename": "mlzero.classifiers.kNNClassifier", "qualname": "kNNClassifier.majority_count", "kind": "function", "doc": "<p>Determine the most common class label among the neighbors.</p>\n\n<p>Parameters:\n    neighbor_indices (list): Indices of the nearest neighbors.</p>\n\n<p>Returns:\n    int or float: Most common class label among neighbors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">neighbor_indices</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"fullname": "mlzero.classifiers.kNNClassifier.kNNClassifier.fit", "modulename": "mlzero.classifiers.kNNClassifier", "qualname": "kNNClassifier.fit", "kind": "function", "doc": "<p>Store the training data for kNN classification.</p>\n\n<p>Parameters:\n    X_train (np.ndarray): Training input data.\n    y_train (np.ndarray): Training target labels.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X_train</span>, </span><span class=\"param\"><span class=\"n\">y_train</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"fullname": "mlzero.classifiers.kNNClassifier.kNNClassifier.predict", "modulename": "mlzero.classifiers.kNNClassifier", "qualname": "kNNClassifier.predict", "kind": "function", "doc": "<p>Predict class labels for the test data.</p>\n\n<p>Parameters:\n    X_test (np.ndarray): Test input data.</p>\n\n<p>Returns:\n    np.ndarray: Predicted class labels.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X_test</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.logisticRegression": {"fullname": "mlzero.classifiers.logisticRegression", "modulename": "mlzero.classifiers.logisticRegression", "kind": "module", "doc": "<p></p>\n"}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"fullname": "mlzero.classifiers.logisticRegression.LogisticRegression", "modulename": "mlzero.classifiers.logisticRegression", "qualname": "LogisticRegression", "kind": "class", "doc": "<p>LogisticRegression implements logistic regression for binary classification using gradient descent.</p>\n", "bases": "mlzero.classifiers.baseClassifier.BaseClassifier"}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"fullname": "mlzero.classifiers.logisticRegression.LogisticRegression.__init__", "modulename": "mlzero.classifiers.logisticRegression", "qualname": "LogisticRegression.__init__", "kind": "function", "doc": "<p>Initialize the LogisticRegression model.</p>\n\n<p>Parameters:\n    lr (float): Learning rate for gradient descent.\n    random_state (int): Seed for reproducibility.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.01</span>, </span><span class=\"param\"><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span></span>)</span>"}, "mlzero.classifiers.logisticRegression.LogisticRegression.weights": {"fullname": "mlzero.classifiers.logisticRegression.LogisticRegression.weights", "modulename": "mlzero.classifiers.logisticRegression", "qualname": "LogisticRegression.weights", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.logisticRegression.LogisticRegression.lr": {"fullname": "mlzero.classifiers.logisticRegression.LogisticRegression.lr", "modulename": "mlzero.classifiers.logisticRegression", "qualname": "LogisticRegression.lr", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.logisticRegression.LogisticRegression.random_state": {"fullname": "mlzero.classifiers.logisticRegression.LogisticRegression.random_state", "modulename": "mlzero.classifiers.logisticRegression", "qualname": "LogisticRegression.random_state", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"fullname": "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid", "modulename": "mlzero.classifiers.logisticRegression", "qualname": "LogisticRegression.sigmoid", "kind": "function", "doc": "<p>Compute the sigmoid function.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input array.</p>\n\n<p>Returns:\n    np.ndarray: Output after applying sigmoid function.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"fullname": "mlzero.classifiers.logisticRegression.LogisticRegression.fit", "modulename": "mlzero.classifiers.logisticRegression", "qualname": "LogisticRegression.fit", "kind": "function", "doc": "<p>Fit the LogisticRegression model using gradient descent.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    y (np.ndarray): Target values.\n    epochs (int): Number of training epochs.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">50</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"fullname": "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba", "modulename": "mlzero.classifiers.logisticRegression", "qualname": "LogisticRegression.predict_proba", "kind": "function", "doc": "<p>Predict probability estimates for input data X.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Probability estimates for the positive class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"fullname": "mlzero.classifiers.logisticRegression.LogisticRegression.predict", "modulename": "mlzero.classifiers.logisticRegression", "qualname": "LogisticRegression.predict", "kind": "function", "doc": "<p>Predict binary class labels for input data X.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    threshold (float): Threshold for classifying as positive class.</p>\n\n<p>Returns:\n    np.ndarray: Predicted class labels (0 or 1).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.5</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.naiveBayes": {"fullname": "mlzero.classifiers.naiveBayes", "modulename": "mlzero.classifiers.naiveBayes", "kind": "module", "doc": "<p></p>\n"}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"fullname": "mlzero.classifiers.naiveBayes.NaiveBayesClassifier", "modulename": "mlzero.classifiers.naiveBayes", "qualname": "NaiveBayesClassifier", "kind": "class", "doc": "<p>NaiveBayesClassifier implements Gaussian Naive Bayes classification.</p>\n", "bases": "mlzero.classifiers.baseClassifier.BaseClassifier"}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"fullname": "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit", "modulename": "mlzero.classifiers.naiveBayes", "qualname": "NaiveBayesClassifier.fit", "kind": "function", "doc": "<p>Fit the Naive Bayes model to the training data.</p>\n\n<p>Parameters:\n    X (np.ndarray): Training input data.\n    y (np.ndarray): Training target labels.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"fullname": "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict", "modulename": "mlzero.classifiers.naiveBayes", "qualname": "NaiveBayesClassifier.predict", "kind": "function", "doc": "<p>Predict class labels for the input data X.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Predicted class labels.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"fullname": "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional", "modulename": "mlzero.classifiers.naiveBayes", "qualname": "NaiveBayesClassifier.class_conditional", "kind": "function", "doc": "<p>Calculate the probability of x given class_idx using Gaussian likelihood.</p>\n\n<p>Parameters:\n    class_idx (int): Index of the class.\n    x (np.ndarray): Input sample.</p>\n\n<p>Returns:\n    np.ndarray: Class-conditional probabilities for each feature.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">class_idx</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.perceptron": {"fullname": "mlzero.classifiers.perceptron", "modulename": "mlzero.classifiers.perceptron", "kind": "module", "doc": "<p></p>\n"}, "mlzero.classifiers.perceptron.Perceptron": {"fullname": "mlzero.classifiers.perceptron.Perceptron", "modulename": "mlzero.classifiers.perceptron", "qualname": "Perceptron", "kind": "class", "doc": "<p>Perceptron implements the perceptron algorithm for binary classification.</p>\n", "bases": "mlzero.classifiers.baseClassifier.BaseClassifier"}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"fullname": "mlzero.classifiers.perceptron.Perceptron.__init__", "modulename": "mlzero.classifiers.perceptron", "qualname": "Perceptron.__init__", "kind": "function", "doc": "<p>Initialize the Perceptron model.</p>\n\n<p>Parameters:\n    lr (float): Learning rate for weight updates.\n    epochs (int): Number of training epochs.\n    random_state (int): Seed for reproducibility.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.01</span>, </span><span class=\"param\"><span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">50</span>, </span><span class=\"param\"><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span></span>)</span>"}, "mlzero.classifiers.perceptron.Perceptron.lr": {"fullname": "mlzero.classifiers.perceptron.Perceptron.lr", "modulename": "mlzero.classifiers.perceptron", "qualname": "Perceptron.lr", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.perceptron.Perceptron.epochs": {"fullname": "mlzero.classifiers.perceptron.Perceptron.epochs", "modulename": "mlzero.classifiers.perceptron", "qualname": "Perceptron.epochs", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.perceptron.Perceptron.random_state": {"fullname": "mlzero.classifiers.perceptron.Perceptron.random_state", "modulename": "mlzero.classifiers.perceptron", "qualname": "Perceptron.random_state", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.perceptron.Perceptron.fit": {"fullname": "mlzero.classifiers.perceptron.Perceptron.fit", "modulename": "mlzero.classifiers.perceptron", "qualname": "Perceptron.fit", "kind": "function", "doc": "<p>Fit the Perceptron model to the training data.</p>\n\n<p>Parameters:\n    X (np.ndarray): Training input data.\n    y (np.ndarray): Training target labels.</p>\n\n<p>Returns:\n    self: Fitted estimator.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.perceptron.Perceptron.predict": {"fullname": "mlzero.classifiers.perceptron.Perceptron.predict", "modulename": "mlzero.classifiers.perceptron", "qualname": "Perceptron.predict", "kind": "function", "doc": "<p>Predict binary class labels for input data X.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Predicted class labels (0 or 1).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.softmaxregression": {"fullname": "mlzero.classifiers.softmaxregression", "modulename": "mlzero.classifiers.softmaxregression", "kind": "module", "doc": "<p></p>\n"}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"fullname": "mlzero.classifiers.softmaxregression.SoftmaxRegression", "modulename": "mlzero.classifiers.softmaxregression", "qualname": "SoftmaxRegression", "kind": "class", "doc": "<p>SoftmaxRegression implements multinomial logistic regression (softmax regression) for multiclass classification.</p>\n", "bases": "mlzero.classifiers.baseClassifier.BaseClassifier"}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"fullname": "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__", "modulename": "mlzero.classifiers.softmaxregression", "qualname": "SoftmaxRegression.__init__", "kind": "function", "doc": "<p>Initialize the SoftmaxRegression model.</p>\n\n<p>Parameters:\n    n_classes (int): Number of classes.\n    random_state (int): Seed for reproducibility.\n    lr (float): Learning rate for gradient descent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n_classes</span>, </span><span class=\"param\"><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span>, </span><span class=\"param\"><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.01</span></span>)</span>"}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.weights": {"fullname": "mlzero.classifiers.softmaxregression.SoftmaxRegression.weights", "modulename": "mlzero.classifiers.softmaxregression", "qualname": "SoftmaxRegression.weights", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.n_classes": {"fullname": "mlzero.classifiers.softmaxregression.SoftmaxRegression.n_classes", "modulename": "mlzero.classifiers.softmaxregression", "qualname": "SoftmaxRegression.n_classes", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.random_state": {"fullname": "mlzero.classifiers.softmaxregression.SoftmaxRegression.random_state", "modulename": "mlzero.classifiers.softmaxregression", "qualname": "SoftmaxRegression.random_state", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.lr": {"fullname": "mlzero.classifiers.softmaxregression.SoftmaxRegression.lr", "modulename": "mlzero.classifiers.softmaxregression", "qualname": "SoftmaxRegression.lr", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"fullname": "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit", "modulename": "mlzero.classifiers.softmaxregression", "qualname": "SoftmaxRegression.fit", "kind": "function", "doc": "<p>Fit the SoftmaxRegression model using gradient descent.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    y (np.ndarray): Target values (integer class labels).\n    epochs (int): Number of training epochs.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">100</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"fullname": "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax", "modulename": "mlzero.classifiers.softmaxregression", "qualname": "SoftmaxRegression.softmax", "kind": "function", "doc": "<p>Compute the softmax function for the input array Z.</p>\n\n<p>Parameters:\n    Z (np.ndarray): Input array of logits.</p>\n\n<p>Returns:\n    np.ndarray: Softmax probabilities.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Z</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"fullname": "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba", "modulename": "mlzero.classifiers.softmaxregression", "qualname": "SoftmaxRegression.predict_proba", "kind": "function", "doc": "<p>Predict class probabilities for input data X.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Predicted class probabilities.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"fullname": "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict", "modulename": "mlzero.classifiers.softmaxregression", "qualname": "SoftmaxRegression.predict", "kind": "function", "doc": "<p>Predict class labels for input data X.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Predicted class labels (integers).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.clusterers": {"fullname": "mlzero.clusterers", "modulename": "mlzero.clusterers", "kind": "module", "doc": "<p></p>\n"}, "mlzero.clusterers.k_means": {"fullname": "mlzero.clusterers.k_means", "modulename": "mlzero.clusterers.k_means", "kind": "module", "doc": "<p></p>\n"}, "mlzero.clusterers.k_means.Kmeans": {"fullname": "mlzero.clusterers.k_means.Kmeans", "modulename": "mlzero.clusterers.k_means", "qualname": "Kmeans", "kind": "class", "doc": "<p>Kmeans implements the K-Means clustering algorithm.</p>\n"}, "mlzero.clusterers.k_means.Kmeans.__init__": {"fullname": "mlzero.clusterers.k_means.Kmeans.__init__", "modulename": "mlzero.clusterers.k_means", "qualname": "Kmeans.__init__", "kind": "function", "doc": "<p>Initialize the Kmeans clustering model.</p>\n\n<p>Parameters:\n    n_clusters (int): Number of clusters.\n    max_iterations (int): Maximum number of iterations.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n_clusters</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">max_iterations</span><span class=\"o\">=</span><span class=\"mi\">100</span></span>)</span>"}, "mlzero.clusterers.k_means.Kmeans.n_clusters": {"fullname": "mlzero.clusterers.k_means.Kmeans.n_clusters", "modulename": "mlzero.clusterers.k_means", "qualname": "Kmeans.n_clusters", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.clusterers.k_means.Kmeans.max_iterations": {"fullname": "mlzero.clusterers.k_means.Kmeans.max_iterations", "modulename": "mlzero.clusterers.k_means", "qualname": "Kmeans.max_iterations", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.clusterers.k_means.Kmeans.centroids": {"fullname": "mlzero.clusterers.k_means.Kmeans.centroids", "modulename": "mlzero.clusterers.k_means", "qualname": "Kmeans.centroids", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.clusterers.k_means.Kmeans.centroid_history": {"fullname": "mlzero.clusterers.k_means.Kmeans.centroid_history", "modulename": "mlzero.clusterers.k_means", "qualname": "Kmeans.centroid_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"fullname": "mlzero.clusterers.k_means.Kmeans.euclideanDist", "modulename": "mlzero.clusterers.k_means", "qualname": "Kmeans.euclideanDist", "kind": "function", "doc": "<p>Compute the Euclidean distance between two points.</p>\n\n<p>Parameters:\n    x1 (np.ndarray): First point.\n    x2 (np.ndarray): Second point.</p>\n\n<p>Returns:\n    float: Euclidean distance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x1</span>, </span><span class=\"param\"><span class=\"n\">x2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"fullname": "mlzero.clusterers.k_means.Kmeans.fit_predict", "modulename": "mlzero.clusterers.k_means", "qualname": "Kmeans.fit_predict", "kind": "function", "doc": "<p>Fit the Kmeans model to the data and predict cluster assignments.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    iterations (int): Maximum number of iterations.</p>\n\n<p>Returns:\n    tuple: (Cluster assignments, final centroids)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">iterations</span><span class=\"o\">=</span><span class=\"mi\">200</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"fullname": "mlzero.clusterers.k_means.Kmeans.set_initial", "modulename": "mlzero.clusterers.k_means", "qualname": "Kmeans.set_initial", "kind": "function", "doc": "<p>Initialize centroids randomly from the data points.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"fullname": "mlzero.clusterers.k_means.Kmeans.assign_centroids", "modulename": "mlzero.clusterers.k_means", "qualname": "Kmeans.assign_centroids", "kind": "function", "doc": "<p>Assign each data point to the nearest centroid.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Cluster assignments for each data point.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"fullname": "mlzero.clusterers.k_means.Kmeans.move_centroids", "modulename": "mlzero.clusterers.k_means", "qualname": "Kmeans.move_centroids", "kind": "function", "doc": "<p>Update centroids as the mean of assigned points.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    X_color (np.ndarray): Cluster assignments.</p>\n\n<p>Returns:\n    np.ndarray: Updated centroids.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">X_color</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.clusterers.k_means.Kmeans.history": {"fullname": "mlzero.clusterers.k_means.Kmeans.history", "modulename": "mlzero.clusterers.k_means", "qualname": "Kmeans.history", "kind": "function", "doc": "<p>Get the history of centroid updates during training.</p>\n\n<p>Returns:\n    list: List of centroid arrays at each iteration.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.decomposers": {"fullname": "mlzero.decomposers", "modulename": "mlzero.decomposers", "kind": "module", "doc": "<p></p>\n"}, "mlzero.decomposers.pca": {"fullname": "mlzero.decomposers.pca", "modulename": "mlzero.decomposers.pca", "kind": "module", "doc": "<p></p>\n"}, "mlzero.decomposers.pca.PCA": {"fullname": "mlzero.decomposers.pca.PCA", "modulename": "mlzero.decomposers.pca", "qualname": "PCA", "kind": "class", "doc": "<p>Principal Component Analysis (PCA) for dimensionality reduction.</p>\n"}, "mlzero.decomposers.pca.PCA.__init__": {"fullname": "mlzero.decomposers.pca.PCA.__init__", "modulename": "mlzero.decomposers.pca", "qualname": "PCA.__init__", "kind": "function", "doc": "<p>Initialize the PCA model.</p>\n\n<p>Parameters:\n    n_components (int): Number of principal components to keep.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n_components</span></span>)</span>"}, "mlzero.decomposers.pca.PCA.n_components": {"fullname": "mlzero.decomposers.pca.PCA.n_components", "modulename": "mlzero.decomposers.pca", "qualname": "PCA.n_components", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.decomposers.pca.PCA.components": {"fullname": "mlzero.decomposers.pca.PCA.components", "modulename": "mlzero.decomposers.pca", "qualname": "PCA.components", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.decomposers.pca.PCA.mean": {"fullname": "mlzero.decomposers.pca.PCA.mean", "modulename": "mlzero.decomposers.pca", "qualname": "PCA.mean", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.decomposers.pca.PCA.fit": {"fullname": "mlzero.decomposers.pca.PCA.fit", "modulename": "mlzero.decomposers.pca", "qualname": "PCA.fit", "kind": "function", "doc": "<p>Fit the PCA model to the data X.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data of shape (n_samples, n_features).</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.decomposers.pca.PCA.transform": {"fullname": "mlzero.decomposers.pca.PCA.transform", "modulename": "mlzero.decomposers.pca", "qualname": "PCA.transform", "kind": "function", "doc": "<p>Project the data X onto the principal components.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data of shape (n_samples, n_features).</p>\n\n<p>Returns:\n    np.ndarray: Transformed data of shape (n_samples, n_components).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.metrics": {"fullname": "mlzero.metrics", "modulename": "mlzero.metrics", "kind": "module", "doc": "<p></p>\n"}, "mlzero.metrics.classification": {"fullname": "mlzero.metrics.classification", "modulename": "mlzero.metrics.classification", "kind": "module", "doc": "<p></p>\n"}, "mlzero.metrics.classification.classification_metrics": {"fullname": "mlzero.metrics.classification.classification_metrics", "modulename": "mlzero.metrics.classification.classification_metrics", "kind": "module", "doc": "<p></p>\n"}, "mlzero.metrics.classification.classification_metrics.accuracy": {"fullname": "mlzero.metrics.classification.classification_metrics.accuracy", "modulename": "mlzero.metrics.classification.classification_metrics", "qualname": "accuracy", "kind": "function", "doc": "<p>Accuracy classification score</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.metrics.classification.classification_metrics.precision": {"fullname": "mlzero.metrics.classification.classification_metrics.precision", "modulename": "mlzero.metrics.classification.classification_metrics", "qualname": "precision", "kind": "function", "doc": "<p>Precision score for binary and multiclass classification</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span>, </span><span class=\"param\"><span class=\"n\">average</span><span class=\"o\">=</span><span class=\"s1\">&#39;binary&#39;</span>, </span><span class=\"param\"><span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.metrics.classification.classification_metrics.recall": {"fullname": "mlzero.metrics.classification.classification_metrics.recall", "modulename": "mlzero.metrics.classification.classification_metrics", "qualname": "recall", "kind": "function", "doc": "<p>Recall score for binary and multiclass classification</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span>, </span><span class=\"param\"><span class=\"n\">average</span><span class=\"o\">=</span><span class=\"s1\">&#39;binary&#39;</span>, </span><span class=\"param\"><span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.metrics.classification.classification_metrics.f1_score": {"fullname": "mlzero.metrics.classification.classification_metrics.f1_score", "modulename": "mlzero.metrics.classification.classification_metrics", "qualname": "f1_score", "kind": "function", "doc": "<p>F1 score for binary and multiclass classification</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span>, </span><span class=\"param\"><span class=\"n\">average</span><span class=\"o\">=</span><span class=\"s1\">&#39;binary&#39;</span>, </span><span class=\"param\"><span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.metrics.regression": {"fullname": "mlzero.metrics.regression", "modulename": "mlzero.metrics.regression", "kind": "module", "doc": "<p></p>\n"}, "mlzero.metrics.regression.regression_metrics": {"fullname": "mlzero.metrics.regression.regression_metrics", "modulename": "mlzero.metrics.regression.regression_metrics", "kind": "module", "doc": "<p></p>\n"}, "mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"fullname": "mlzero.metrics.regression.regression_metrics.mean_absolute_error", "modulename": "mlzero.metrics.regression.regression_metrics", "qualname": "mean_absolute_error", "kind": "function", "doc": "<p>Mean Absolute Error (MAE)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"fullname": "mlzero.metrics.regression.regression_metrics.mean_squared_error", "modulename": "mlzero.metrics.regression.regression_metrics", "qualname": "mean_squared_error", "kind": "function", "doc": "<p>Mean Squared Error (MSE)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.metrics.regression.regression_metrics.r2_score": {"fullname": "mlzero.metrics.regression.regression_metrics.r2_score", "modulename": "mlzero.metrics.regression.regression_metrics", "qualname": "r2_score", "kind": "function", "doc": "<p>R^2 (coefficient of determination) regression score function</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors": {"fullname": "mlzero.regressors", "modulename": "mlzero.regressors", "kind": "module", "doc": "<p></p>\n"}, "mlzero.regressors.ElasticNet": {"fullname": "mlzero.regressors.ElasticNet", "modulename": "mlzero.regressors.ElasticNet", "kind": "module", "doc": "<p></p>\n"}, "mlzero.regressors.ElasticNet.ElasticNet": {"fullname": "mlzero.regressors.ElasticNet.ElasticNet", "modulename": "mlzero.regressors.ElasticNet", "qualname": "ElasticNet", "kind": "class", "doc": "<p>ElasticNet implements Elastic Net regression using gradient descent.</p>\n", "bases": "mlzero.regressors.baseRegressor.BaseRegressor"}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"fullname": "mlzero.regressors.ElasticNet.ElasticNet.__init__", "modulename": "mlzero.regressors.ElasticNet", "qualname": "ElasticNet.__init__", "kind": "function", "doc": "<p>Initialize the ElasticNet regressor.</p>\n\n<p>Parameters:\n    random_state (int): Seed for reproducibility.\n    lam (float): Regularization strength.\n    alpha (float): Mixing parameter between L1 and L2 regularization.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span>, </span><span class=\"param\"><span class=\"n\">lam</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>, </span><span class=\"param\"><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.5</span></span>)</span>"}, "mlzero.regressors.ElasticNet.ElasticNet.weights": {"fullname": "mlzero.regressors.ElasticNet.ElasticNet.weights", "modulename": "mlzero.regressors.ElasticNet", "qualname": "ElasticNet.weights", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.ElasticNet.ElasticNet.bias": {"fullname": "mlzero.regressors.ElasticNet.ElasticNet.bias", "modulename": "mlzero.regressors.ElasticNet", "qualname": "ElasticNet.bias", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.ElasticNet.ElasticNet.lam": {"fullname": "mlzero.regressors.ElasticNet.ElasticNet.lam", "modulename": "mlzero.regressors.ElasticNet", "qualname": "ElasticNet.lam", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.ElasticNet.ElasticNet.random_state": {"fullname": "mlzero.regressors.ElasticNet.ElasticNet.random_state", "modulename": "mlzero.regressors.ElasticNet", "qualname": "ElasticNet.random_state", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.ElasticNet.ElasticNet.alpha": {"fullname": "mlzero.regressors.ElasticNet.ElasticNet.alpha", "modulename": "mlzero.regressors.ElasticNet", "qualname": "ElasticNet.alpha", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.ElasticNet.ElasticNet.loss_history": {"fullname": "mlzero.regressors.ElasticNet.ElasticNet.loss_history", "modulename": "mlzero.regressors.ElasticNet", "qualname": "ElasticNet.loss_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.ElasticNet.ElasticNet.weights_history": {"fullname": "mlzero.regressors.ElasticNet.ElasticNet.weights_history", "modulename": "mlzero.regressors.ElasticNet", "qualname": "ElasticNet.weights_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.ElasticNet.ElasticNet.bias_history": {"fullname": "mlzero.regressors.ElasticNet.ElasticNet.bias_history", "modulename": "mlzero.regressors.ElasticNet", "qualname": "ElasticNet.bias_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"fullname": "mlzero.regressors.ElasticNet.ElasticNet.calc_loss", "modulename": "mlzero.regressors.ElasticNet", "qualname": "ElasticNet.calc_loss", "kind": "function", "doc": "<p>Calculate the Elastic Net-regularized mean squared error loss.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    y (np.ndarray): Target values.</p>\n\n<p>Returns:\n    float: The Elastic Net-regularized loss value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"fullname": "mlzero.regressors.ElasticNet.ElasticNet.fit", "modulename": "mlzero.regressors.ElasticNet", "qualname": "ElasticNet.fit", "kind": "function", "doc": "<p>Fit the ElasticNet model using gradient descent.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    y (np.ndarray): Target values.\n    epochs (int): Number of training epochs.\n    lr (float): Learning rate.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.01</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"fullname": "mlzero.regressors.ElasticNet.ElasticNet.predict", "modulename": "mlzero.regressors.ElasticNet", "qualname": "ElasticNet.predict", "kind": "function", "doc": "<p>Predict target values for input data X.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Predicted values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.L1Regressor": {"fullname": "mlzero.regressors.L1Regressor", "modulename": "mlzero.regressors.L1Regressor", "kind": "module", "doc": "<p></p>\n"}, "mlzero.regressors.L1Regressor.L1Regressor": {"fullname": "mlzero.regressors.L1Regressor.L1Regressor", "modulename": "mlzero.regressors.L1Regressor", "qualname": "L1Regressor", "kind": "class", "doc": "<p>L1Regressor implements Lasso regression using gradient descent.</p>\n", "bases": "mlzero.regressors.baseRegressor.BaseRegressor"}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"fullname": "mlzero.regressors.L1Regressor.L1Regressor.__init__", "modulename": "mlzero.regressors.L1Regressor", "qualname": "L1Regressor.__init__", "kind": "function", "doc": "<p>Initialize the L1Regressor.</p>\n\n<p>Parameters:\n    lam (float): Regularization strength.\n    random_state (int): Seed for reproducibility.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lam</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>, </span><span class=\"param\"><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span></span>)</span>"}, "mlzero.regressors.L1Regressor.L1Regressor.weights": {"fullname": "mlzero.regressors.L1Regressor.L1Regressor.weights", "modulename": "mlzero.regressors.L1Regressor", "qualname": "L1Regressor.weights", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L1Regressor.L1Regressor.bias": {"fullname": "mlzero.regressors.L1Regressor.L1Regressor.bias", "modulename": "mlzero.regressors.L1Regressor", "qualname": "L1Regressor.bias", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L1Regressor.L1Regressor.lam": {"fullname": "mlzero.regressors.L1Regressor.L1Regressor.lam", "modulename": "mlzero.regressors.L1Regressor", "qualname": "L1Regressor.lam", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L1Regressor.L1Regressor.random_state": {"fullname": "mlzero.regressors.L1Regressor.L1Regressor.random_state", "modulename": "mlzero.regressors.L1Regressor", "qualname": "L1Regressor.random_state", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L1Regressor.L1Regressor.loss_history": {"fullname": "mlzero.regressors.L1Regressor.L1Regressor.loss_history", "modulename": "mlzero.regressors.L1Regressor", "qualname": "L1Regressor.loss_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L1Regressor.L1Regressor.weights_history": {"fullname": "mlzero.regressors.L1Regressor.L1Regressor.weights_history", "modulename": "mlzero.regressors.L1Regressor", "qualname": "L1Regressor.weights_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L1Regressor.L1Regressor.bias_history": {"fullname": "mlzero.regressors.L1Regressor.L1Regressor.bias_history", "modulename": "mlzero.regressors.L1Regressor", "qualname": "L1Regressor.bias_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"fullname": "mlzero.regressors.L1Regressor.L1Regressor.calc_loss", "modulename": "mlzero.regressors.L1Regressor", "qualname": "L1Regressor.calc_loss", "kind": "function", "doc": "<p>Calculate the L1-regularized mean squared error loss.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    y (np.ndarray): Target values.</p>\n\n<p>Returns:\n    float: The L1-regularized loss value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"fullname": "mlzero.regressors.L1Regressor.L1Regressor.fit", "modulename": "mlzero.regressors.L1Regressor", "qualname": "L1Regressor.fit", "kind": "function", "doc": "<p>Fit the L1Regressor model using gradient descent.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    y (np.ndarray): Target values.\n    epochs (int): Number of training epochs.\n    lr (float): Learning rate.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.01</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"fullname": "mlzero.regressors.L1Regressor.L1Regressor.predict", "modulename": "mlzero.regressors.L1Regressor", "qualname": "L1Regressor.predict", "kind": "function", "doc": "<p>Predict target values for input data X.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Predicted values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.L2Regressor": {"fullname": "mlzero.regressors.L2Regressor", "modulename": "mlzero.regressors.L2Regressor", "kind": "module", "doc": "<p></p>\n"}, "mlzero.regressors.L2Regressor.L2Regressor": {"fullname": "mlzero.regressors.L2Regressor.L2Regressor", "modulename": "mlzero.regressors.L2Regressor", "qualname": "L2Regressor", "kind": "class", "doc": "<p>L2Regressor implements Ridge regression using gradient descent.</p>\n", "bases": "mlzero.regressors.baseRegressor.BaseRegressor"}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"fullname": "mlzero.regressors.L2Regressor.L2Regressor.__init__", "modulename": "mlzero.regressors.L2Regressor", "qualname": "L2Regressor.__init__", "kind": "function", "doc": "<p>Initialize the L2Regressor.</p>\n\n<p>Parameters:\n    lam (float): Regularization strength.\n    random_state (int): Seed for reproducibility.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lam</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>, </span><span class=\"param\"><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span></span>)</span>"}, "mlzero.regressors.L2Regressor.L2Regressor.weights": {"fullname": "mlzero.regressors.L2Regressor.L2Regressor.weights", "modulename": "mlzero.regressors.L2Regressor", "qualname": "L2Regressor.weights", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L2Regressor.L2Regressor.bias": {"fullname": "mlzero.regressors.L2Regressor.L2Regressor.bias", "modulename": "mlzero.regressors.L2Regressor", "qualname": "L2Regressor.bias", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L2Regressor.L2Regressor.lam": {"fullname": "mlzero.regressors.L2Regressor.L2Regressor.lam", "modulename": "mlzero.regressors.L2Regressor", "qualname": "L2Regressor.lam", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L2Regressor.L2Regressor.random_state": {"fullname": "mlzero.regressors.L2Regressor.L2Regressor.random_state", "modulename": "mlzero.regressors.L2Regressor", "qualname": "L2Regressor.random_state", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L2Regressor.L2Regressor.loss_history": {"fullname": "mlzero.regressors.L2Regressor.L2Regressor.loss_history", "modulename": "mlzero.regressors.L2Regressor", "qualname": "L2Regressor.loss_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L2Regressor.L2Regressor.weights_history": {"fullname": "mlzero.regressors.L2Regressor.L2Regressor.weights_history", "modulename": "mlzero.regressors.L2Regressor", "qualname": "L2Regressor.weights_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L2Regressor.L2Regressor.bias_history": {"fullname": "mlzero.regressors.L2Regressor.L2Regressor.bias_history", "modulename": "mlzero.regressors.L2Regressor", "qualname": "L2Regressor.bias_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"fullname": "mlzero.regressors.L2Regressor.L2Regressor.calc_loss", "modulename": "mlzero.regressors.L2Regressor", "qualname": "L2Regressor.calc_loss", "kind": "function", "doc": "<p>Calculate the L2-regularized mean squared error loss.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    y (np.ndarray): Target values.</p>\n\n<p>Returns:\n    float: The L2-regularized loss value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"fullname": "mlzero.regressors.L2Regressor.L2Regressor.fit", "modulename": "mlzero.regressors.L2Regressor", "qualname": "L2Regressor.fit", "kind": "function", "doc": "<p>Fit the L2Regressor model using gradient descent.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    y (np.ndarray): Target values.\n    epochs (int): Number of training epochs.\n    lr (float): Learning rate.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.01</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"fullname": "mlzero.regressors.L2Regressor.L2Regressor.predict", "modulename": "mlzero.regressors.L2Regressor", "qualname": "L2Regressor.predict", "kind": "function", "doc": "<p>Predict target values for input data X.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Predicted values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.baseRegressor": {"fullname": "mlzero.regressors.baseRegressor", "modulename": "mlzero.regressors.baseRegressor", "kind": "module", "doc": "<p></p>\n"}, "mlzero.regressors.baseRegressor.BaseRegressor": {"fullname": "mlzero.regressors.baseRegressor.BaseRegressor", "modulename": "mlzero.regressors.baseRegressor", "qualname": "BaseRegressor", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "abc.ABC"}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"fullname": "mlzero.regressors.baseRegressor.BaseRegressor.fit", "modulename": "mlzero.regressors.baseRegressor", "qualname": "BaseRegressor.fit", "kind": "function", "doc": "<p>Fit the model to training data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"fullname": "mlzero.regressors.baseRegressor.BaseRegressor.predict", "modulename": "mlzero.regressors.baseRegressor", "qualname": "BaseRegressor.predict", "kind": "function", "doc": "<p>Make predictions using the trained model.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"fullname": "mlzero.regressors.baseRegressor.BaseRegressor.score", "modulename": "mlzero.regressors.baseRegressor", "qualname": "BaseRegressor.score", "kind": "function", "doc": "<p>Default implementation of R^2 score.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.linearCF": {"fullname": "mlzero.regressors.linearCF", "modulename": "mlzero.regressors.linearCF", "kind": "module", "doc": "<p></p>\n"}, "mlzero.regressors.linearCF.LinearRegressionCF": {"fullname": "mlzero.regressors.linearCF.LinearRegressionCF", "modulename": "mlzero.regressors.linearCF", "qualname": "LinearRegressionCF", "kind": "class", "doc": "<p>LinearRegressionCF implements linear regression using the closed-form solution (normal equation).</p>\n", "bases": "mlzero.regressors.baseRegressor.BaseRegressor"}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"fullname": "mlzero.regressors.linearCF.LinearRegressionCF.__init__", "modulename": "mlzero.regressors.linearCF", "qualname": "LinearRegressionCF.__init__", "kind": "function", "doc": "<p>Initialize the LinearRegressionCF model.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "mlzero.regressors.linearCF.LinearRegressionCF.theta": {"fullname": "mlzero.regressors.linearCF.LinearRegressionCF.theta", "modulename": "mlzero.regressors.linearCF", "qualname": "LinearRegressionCF.theta", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"fullname": "mlzero.regressors.linearCF.LinearRegressionCF.fit", "modulename": "mlzero.regressors.linearCF", "qualname": "LinearRegressionCF.fit", "kind": "function", "doc": "<p>Fit the LinearRegressionCF model using the normal equation.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    y (np.ndarray): Target values.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"fullname": "mlzero.regressors.linearCF.LinearRegressionCF.predict", "modulename": "mlzero.regressors.linearCF", "qualname": "LinearRegressionCF.predict", "kind": "function", "doc": "<p>Predict target values for input data X.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Predicted values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.linearGD": {"fullname": "mlzero.regressors.linearGD", "modulename": "mlzero.regressors.linearGD", "kind": "module", "doc": "<p></p>\n"}, "mlzero.regressors.linearGD.LinearRegressionGD": {"fullname": "mlzero.regressors.linearGD.LinearRegressionGD", "modulename": "mlzero.regressors.linearGD", "qualname": "LinearRegressionGD", "kind": "class", "doc": "<p>LinearRegressionGD implements univariate linear regression using gradient descent.</p>\n", "bases": "mlzero.regressors.baseRegressor.BaseRegressor"}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"fullname": "mlzero.regressors.linearGD.LinearRegressionGD.__init__", "modulename": "mlzero.regressors.linearGD", "qualname": "LinearRegressionGD.__init__", "kind": "function", "doc": "<p>Initialize the LinearRegressionGD model.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "mlzero.regressors.linearGD.LinearRegressionGD.weights": {"fullname": "mlzero.regressors.linearGD.LinearRegressionGD.weights", "modulename": "mlzero.regressors.linearGD", "qualname": "LinearRegressionGD.weights", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.linearGD.LinearRegressionGD.bias": {"fullname": "mlzero.regressors.linearGD.LinearRegressionGD.bias", "modulename": "mlzero.regressors.linearGD", "qualname": "LinearRegressionGD.bias", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.linearGD.LinearRegressionGD.loss_history": {"fullname": "mlzero.regressors.linearGD.LinearRegressionGD.loss_history", "modulename": "mlzero.regressors.linearGD", "qualname": "LinearRegressionGD.loss_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.linearGD.LinearRegressionGD.weight_history": {"fullname": "mlzero.regressors.linearGD.LinearRegressionGD.weight_history", "modulename": "mlzero.regressors.linearGD", "qualname": "LinearRegressionGD.weight_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.linearGD.LinearRegressionGD.bias_history": {"fullname": "mlzero.regressors.linearGD.LinearRegressionGD.bias_history", "modulename": "mlzero.regressors.linearGD", "qualname": "LinearRegressionGD.bias_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"fullname": "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss", "modulename": "mlzero.regressors.linearGD", "qualname": "LinearRegressionGD.calc_loss", "kind": "function", "doc": "<p>Calculate the mean squared error loss.</p>\n\n<p>Parameters:\n    x (np.ndarray): Input data.\n    y (np.ndarray): Target values.</p>\n\n<p>Returns:\n    float: Mean squared error loss.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"fullname": "mlzero.regressors.linearGD.LinearRegressionGD.fit", "modulename": "mlzero.regressors.linearGD", "qualname": "LinearRegressionGD.fit", "kind": "function", "doc": "<p>Fit the LinearRegressionGD model using gradient descent.</p>\n\n<p>Parameters:\n    x (np.ndarray): Input data.\n    y (np.ndarray): Target values.\n    epochs (int): Number of training epochs.\n    lr (float): Learning rate.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.01</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"fullname": "mlzero.regressors.linearGD.LinearRegressionGD.predict", "modulename": "mlzero.regressors.linearGD", "qualname": "LinearRegressionGD.predict", "kind": "function", "doc": "<p>Predict target values for input data x.</p>\n\n<p>Parameters:\n    x (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Predicted values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.multipleGD": {"fullname": "mlzero.regressors.multipleGD", "modulename": "mlzero.regressors.multipleGD", "kind": "module", "doc": "<p></p>\n"}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"fullname": "mlzero.regressors.multipleGD.MultipleRegressionGD", "modulename": "mlzero.regressors.multipleGD", "qualname": "MultipleRegressionGD", "kind": "class", "doc": "<p>MultipleRegressionGD implements multivariate linear regression using gradient descent.</p>\n", "bases": "mlzero.regressors.baseRegressor.BaseRegressor"}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"fullname": "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__", "modulename": "mlzero.regressors.multipleGD", "qualname": "MultipleRegressionGD.__init__", "kind": "function", "doc": "<p>Initialize the MultipleRegressionGD model.</p>\n\n<p>Parameters:\n    random_state (int): Seed for reproducibility.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span></span>)</span>"}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights": {"fullname": "mlzero.regressors.multipleGD.MultipleRegressionGD.weights", "modulename": "mlzero.regressors.multipleGD", "qualname": "MultipleRegressionGD.weights", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias": {"fullname": "mlzero.regressors.multipleGD.MultipleRegressionGD.bias", "modulename": "mlzero.regressors.multipleGD", "qualname": "MultipleRegressionGD.bias", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.multipleGD.MultipleRegressionGD.random_state": {"fullname": "mlzero.regressors.multipleGD.MultipleRegressionGD.random_state", "modulename": "mlzero.regressors.multipleGD", "qualname": "MultipleRegressionGD.random_state", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.multipleGD.MultipleRegressionGD.loss_history": {"fullname": "mlzero.regressors.multipleGD.MultipleRegressionGD.loss_history", "modulename": "mlzero.regressors.multipleGD", "qualname": "MultipleRegressionGD.loss_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights_history": {"fullname": "mlzero.regressors.multipleGD.MultipleRegressionGD.weights_history", "modulename": "mlzero.regressors.multipleGD", "qualname": "MultipleRegressionGD.weights_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias_history": {"fullname": "mlzero.regressors.multipleGD.MultipleRegressionGD.bias_history", "modulename": "mlzero.regressors.multipleGD", "qualname": "MultipleRegressionGD.bias_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"fullname": "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss", "modulename": "mlzero.regressors.multipleGD", "qualname": "MultipleRegressionGD.calc_loss", "kind": "function", "doc": "<p>Calculate the mean squared error loss.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    y (np.ndarray): Target values.</p>\n\n<p>Returns:\n    float: Mean squared error loss.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"fullname": "mlzero.regressors.multipleGD.MultipleRegressionGD.fit", "modulename": "mlzero.regressors.multipleGD", "qualname": "MultipleRegressionGD.fit", "kind": "function", "doc": "<p>Fit the MultipleRegressionGD model using gradient descent.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    y (np.ndarray): Target values.\n    epochs (int): Number of training epochs.\n    lr (float): Learning rate.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.01</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"fullname": "mlzero.regressors.multipleGD.MultipleRegressionGD.predict", "modulename": "mlzero.regressors.multipleGD", "qualname": "MultipleRegressionGD.predict", "kind": "function", "doc": "<p>Predict target values for input data X.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Predicted values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.polylinear": {"fullname": "mlzero.regressors.polylinear", "modulename": "mlzero.regressors.polylinear", "kind": "module", "doc": "<p></p>\n"}, "mlzero.regressors.polylinear.PolynomialRegression": {"fullname": "mlzero.regressors.polylinear.PolynomialRegression", "modulename": "mlzero.regressors.polylinear", "qualname": "PolynomialRegression", "kind": "class", "doc": "<p>PolynomialRegression implements polynomial regression using gradient descent.</p>\n", "bases": "mlzero.regressors.baseRegressor.BaseRegressor"}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"fullname": "mlzero.regressors.polylinear.PolynomialRegression.__init__", "modulename": "mlzero.regressors.polylinear", "qualname": "PolynomialRegression.__init__", "kind": "function", "doc": "<p>Initialize the PolynomialRegression model.</p>\n\n<p>Parameters:\n    n_degree (int): Degree of the polynomial features.\n    random_state (int or None): Seed for reproducibility.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n_degree</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "mlzero.regressors.polylinear.PolynomialRegression.weights": {"fullname": "mlzero.regressors.polylinear.PolynomialRegression.weights", "modulename": "mlzero.regressors.polylinear", "qualname": "PolynomialRegression.weights", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.polylinear.PolynomialRegression.bias": {"fullname": "mlzero.regressors.polylinear.PolynomialRegression.bias", "modulename": "mlzero.regressors.polylinear", "qualname": "PolynomialRegression.bias", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.polylinear.PolynomialRegression.n_degree": {"fullname": "mlzero.regressors.polylinear.PolynomialRegression.n_degree", "modulename": "mlzero.regressors.polylinear", "qualname": "PolynomialRegression.n_degree", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.polylinear.PolynomialRegression.random_state": {"fullname": "mlzero.regressors.polylinear.PolynomialRegression.random_state", "modulename": "mlzero.regressors.polylinear", "qualname": "PolynomialRegression.random_state", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.polylinear.PolynomialRegression.loss_history": {"fullname": "mlzero.regressors.polylinear.PolynomialRegression.loss_history", "modulename": "mlzero.regressors.polylinear", "qualname": "PolynomialRegression.loss_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.polylinear.PolynomialRegression.weights_history": {"fullname": "mlzero.regressors.polylinear.PolynomialRegression.weights_history", "modulename": "mlzero.regressors.polylinear", "qualname": "PolynomialRegression.weights_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"fullname": "mlzero.regressors.polylinear.PolynomialRegression.featureTransform", "modulename": "mlzero.regressors.polylinear", "qualname": "PolynomialRegression.featureTransform", "kind": "function", "doc": "<p>Transform input X to polynomial features up to degree n_degree.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data of shape (n_samples, 1).</p>\n\n<p>Returns:\n    np.ndarray: Transformed data with shape (n_samples, n_degree+1).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"fullname": "mlzero.regressors.polylinear.PolynomialRegression.calc_loss", "modulename": "mlzero.regressors.polylinear", "qualname": "PolynomialRegression.calc_loss", "kind": "function", "doc": "<p>Calculate the mean squared error loss for polynomial regression.</p>\n\n<p>Parameters:\n    X (np.ndarray): Transformed input data.\n    y (np.ndarray): Target values.</p>\n\n<p>Returns:\n    float: Mean squared error loss.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"fullname": "mlzero.regressors.polylinear.PolynomialRegression.fit", "modulename": "mlzero.regressors.polylinear", "qualname": "PolynomialRegression.fit", "kind": "function", "doc": "<p>Fit the PolynomialRegression model using gradient descent.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.\n    y (np.ndarray): Target values.\n    epochs (int): Number of training epochs.\n    lr (float): Learning rate.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.01</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"fullname": "mlzero.regressors.polylinear.PolynomialRegression.predict", "modulename": "mlzero.regressors.polylinear", "qualname": "PolynomialRegression.predict", "kind": "function", "doc": "<p>Predict target values for input data X using the trained polynomial regression model.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data.</p>\n\n<p>Returns:\n    np.ndarray: Predicted values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.small_neural_net": {"fullname": "mlzero.small_neural_net", "modulename": "mlzero.small_neural_net", "kind": "module", "doc": "<p></p>\n"}, "mlzero.small_neural_net.driverMNL": {"fullname": "mlzero.small_neural_net.driverMNL", "modulename": "mlzero.small_neural_net.driverMNL", "kind": "module", "doc": "<p></p>\n"}, "mlzero.small_neural_net.driverMNL.SAMPLES": {"fullname": "mlzero.small_neural_net.driverMNL.SAMPLES", "modulename": "mlzero.small_neural_net.driverMNL", "qualname": "SAMPLES", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, "mlzero.small_neural_net.driverMNL.FEATURES": {"fullname": "mlzero.small_neural_net.driverMNL.FEATURES", "modulename": "mlzero.small_neural_net.driverMNL", "qualname": "FEATURES", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, "mlzero.small_neural_net.driverMNL.EPOCHS": {"fullname": "mlzero.small_neural_net.driverMNL.EPOCHS", "modulename": "mlzero.small_neural_net.driverMNL", "qualname": "EPOCHS", "kind": "variable", "doc": "<p></p>\n", "default_value": "100"}, "mlzero.small_neural_net.driverMNL.LR": {"fullname": "mlzero.small_neural_net.driverMNL.LR", "modulename": "mlzero.small_neural_net.driverMNL", "qualname": "LR", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.0001"}, "mlzero.small_neural_net.driverMNL.X": {"fullname": "mlzero.small_neural_net.driverMNL.X", "modulename": "mlzero.small_neural_net.driverMNL", "qualname": "X", "kind": "variable", "doc": "<p></p>\n", "default_value": "array([[ 52,  93,  15,  72,  61,  21],\n       [ 83,  87,  75,  75,  88, 100],\n       [ 24,   3,  22,  53,   2,  88],\n       [ 30,  38,   2,  64,  60,  21],\n       [ 33,  76,  58,  22,  89,  49],\n       [ 91,  59,  42,  92,  60,  80],\n       [ 15,  62,  62,  47,  62,  51],\n       [ 55,  64,   3,  51,   7,  21],\n       [ 73,  39,  18,   4,  89,  60],\n       [ 14,   9,  90,  53,   2,  84]])"}, "mlzero.small_neural_net.driverMNL.y": {"fullname": "mlzero.small_neural_net.driverMNL.y", "modulename": "mlzero.small_neural_net.driverMNL", "qualname": "y", "kind": "variable", "doc": "<p></p>\n", "default_value": "array([[92],\n       [60],\n       [71],\n       [44],\n       [ 8],\n       [47],\n       [35],\n       [78],\n       [81],\n       [36]])"}, "mlzero.small_neural_net.driverMNL.model": {"fullname": "mlzero.small_neural_net.driverMNL.model", "modulename": "mlzero.small_neural_net.driverMNL", "qualname": "model", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;mlzero.small_neural_net.mnl.MultiNeuronLinearGD object&gt;"}, "mlzero.small_neural_net.driverMNL.y_final": {"fullname": "mlzero.small_neural_net.driverMNL.y_final", "modulename": "mlzero.small_neural_net.driverMNL", "qualname": "y_final", "kind": "variable", "doc": "<p></p>\n", "default_value": "array([[80.46763445],\n       [63.00817555],\n       [71.27305739],\n       [44.17157298],\n       [ 8.00012673],\n       [47.00007889],\n       [48.24171419],\n       [70.82378391],\n       [80.82305116],\n       [35.90502147]])"}, "mlzero.small_neural_net.mnl": {"fullname": "mlzero.small_neural_net.mnl", "modulename": "mlzero.small_neural_net.mnl", "kind": "module", "doc": "<p></p>\n"}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"fullname": "mlzero.small_neural_net.mnl.MultiNeuronLinearGD", "modulename": "mlzero.small_neural_net.mnl", "qualname": "MultiNeuronLinearGD", "kind": "class", "doc": "<p>MultiNeuronLinearGD implements a simple multi-neuron linear model with gradient descent.</p>\n"}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"fullname": "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__", "modulename": "mlzero.small_neural_net.mnl", "qualname": "MultiNeuronLinearGD.__init__", "kind": "function", "doc": "<p>Initialize the model parameters.</p>\n\n<p>Parameters:\n    samples (int): Number of samples in the dataset.\n    features (int): Number of features per sample.\n    lr (float): Learning rate for gradient descent.\n    epochs (int): Number of training epochs.\n    random_state (int): Seed for reproducibility.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">samples</span>, </span><span class=\"param\"><span class=\"n\">features</span>, </span><span class=\"param\"><span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">0.0001</span>, </span><span class=\"param\"><span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span></span>)</span>"}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.samples": {"fullname": "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.samples", "modulename": "mlzero.small_neural_net.mnl", "qualname": "MultiNeuronLinearGD.samples", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.features": {"fullname": "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.features", "modulename": "mlzero.small_neural_net.mnl", "qualname": "MultiNeuronLinearGD.features", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.lr": {"fullname": "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.lr", "modulename": "mlzero.small_neural_net.mnl", "qualname": "MultiNeuronLinearGD.lr", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.epochs": {"fullname": "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.epochs", "modulename": "mlzero.small_neural_net.mnl", "qualname": "MultiNeuronLinearGD.epochs", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.weights": {"fullname": "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.weights", "modulename": "mlzero.small_neural_net.mnl", "qualname": "MultiNeuronLinearGD.weights", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.bias": {"fullname": "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.bias", "modulename": "mlzero.small_neural_net.mnl", "qualname": "MultiNeuronLinearGD.bias", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"fullname": "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history", "modulename": "mlzero.small_neural_net.mnl", "qualname": "MultiNeuronLinearGD.loss_history", "kind": "variable", "doc": "<p></p>\n"}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"fullname": "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward", "modulename": "mlzero.small_neural_net.mnl", "qualname": "MultiNeuronLinearGD.forward", "kind": "function", "doc": "<p>Perform the forward pass for the multi-neuron linear model.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data of shape (samples, features).</p>\n\n<p>Returns:\n    np.ndarray: Predicted outputs of shape (samples, 1).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"fullname": "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss", "modulename": "mlzero.small_neural_net.mnl", "qualname": "MultiNeuronLinearGD.compute_loss", "kind": "function", "doc": "<p>Compute the mean squared error loss.</p>\n\n<p>Parameters:\n    y_pred (np.ndarray): Predicted outputs.\n    y_true (np.ndarray): True target values.</p>\n\n<p>Returns:\n    float: Mean squared error loss.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span>, </span><span class=\"param\"><span class=\"n\">y_true</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"fullname": "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit", "modulename": "mlzero.small_neural_net.mnl", "qualname": "MultiNeuronLinearGD.fit", "kind": "function", "doc": "<p>Train the model using gradient descent.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data of shape (samples, features).\n    y (np.ndarray): Target values of shape (samples, 1).</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"fullname": "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict", "modulename": "mlzero.small_neural_net.mnl", "qualname": "MultiNeuronLinearGD.predict", "kind": "function", "doc": "<p>Predict outputs for the given input data.</p>\n\n<p>Parameters:\n    X (np.ndarray): Input data of shape (samples, features).</p>\n\n<p>Returns:\n    np.ndarray: Predicted outputs of shape (samples, 1).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"mlzero": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.adaLine": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.adaLine.AdaLineGD": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 14}, "mlzero.classifiers.adaLine.AdaLineGD.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 34}, "mlzero.classifiers.adaLine.AdaLineGD.lr": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.adaLine.AdaLineGD.n_iter": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.adaLine.AdaLineGD.random_state": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 33}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 30}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 32}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 42}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 16}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 25}, "mlzero.classifiers.baseClassifier": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.baseClassifier.BaseClassifier": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 16}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 10}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 10}, "mlzero.classifiers.baseClassifier.BaseClassifier.score": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 8}, "mlzero.classifiers.kNNClassifier": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.kNNClassifier.kNNClassifier": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 11}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 18}, "mlzero.classifiers.kNNClassifier.kNNClassifier.n_neighbors": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.kNNClassifier.kNNClassifier.X_train": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.kNNClassifier.kNNClassifier.y_train": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 33}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 38}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 34}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 31}, "mlzero.classifiers.logisticRegression": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 13}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 26}, "mlzero.classifiers.logisticRegression.LogisticRegression.weights": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.logisticRegression.LogisticRegression.lr": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.logisticRegression.LogisticRegression.random_state": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 28}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 37}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 32}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 42}, "mlzero.classifiers.naiveBayes": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 9}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 34}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 30}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 44}, "mlzero.classifiers.perceptron": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.perceptron.Perceptron": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 11}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 33}, "mlzero.classifiers.perceptron.Perceptron.lr": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.perceptron.Perceptron.epochs": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.perceptron.Perceptron.random_state": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.perceptron.Perceptron.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 36}, "mlzero.classifiers.perceptron.Perceptron.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 33}, "mlzero.classifiers.softmaxregression": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 13}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 33}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.weights": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.n_classes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.random_state": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.lr": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 40}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 32}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 29}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 30}, "mlzero.clusterers": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.clusterers.k_means": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.clusterers.k_means.Kmeans": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "mlzero.clusterers.k_means.Kmeans.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 27}, "mlzero.clusterers.k_means.Kmeans.n_clusters": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.clusterers.k_means.Kmeans.max_iterations": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.clusterers.k_means.Kmeans.centroids": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.clusterers.k_means.Kmeans.centroid_history": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 33}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 40}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 24}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 33}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 36}, "mlzero.clusterers.k_means.Kmeans.history": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 23}, "mlzero.decomposers": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.decomposers.pca": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.decomposers.pca.PCA": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "mlzero.decomposers.pca.PCA.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 21}, "mlzero.decomposers.pca.PCA.n_components": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.decomposers.pca.PCA.components": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.decomposers.pca.PCA.mean": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.decomposers.pca.PCA.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 31}, "mlzero.decomposers.pca.PCA.transform": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 41}, "mlzero.metrics": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.metrics.classification": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.metrics.classification.classification_metrics": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.metrics.classification.classification_metrics.accuracy": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 5}, "mlzero.metrics.classification.classification_metrics.precision": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 9}, "mlzero.metrics.classification.classification_metrics.recall": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 9}, "mlzero.metrics.classification.classification_metrics.f1_score": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 9}, "mlzero.metrics.regression": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.metrics.regression.regression_metrics": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 7}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 7}, "mlzero.metrics.regression.regression_metrics.r2_score": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 9}, "mlzero.regressors": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.ElasticNet": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.ElasticNet.ElasticNet": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 11}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 33}, "mlzero.regressors.ElasticNet.ElasticNet.weights": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.ElasticNet.ElasticNet.bias": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.ElasticNet.ElasticNet.lam": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.ElasticNet.ElasticNet.random_state": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.ElasticNet.ElasticNet.alpha": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.ElasticNet.ElasticNet.loss_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.ElasticNet.ElasticNet.weights_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.ElasticNet.ElasticNet.bias_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 39}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 42}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 28}, "mlzero.regressors.L1Regressor": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L1Regressor.L1Regressor": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 10}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 22}, "mlzero.regressors.L1Regressor.L1Regressor.weights": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L1Regressor.L1Regressor.bias": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L1Regressor.L1Regressor.lam": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L1Regressor.L1Regressor.random_state": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L1Regressor.L1Regressor.loss_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L1Regressor.L1Regressor.weights_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L1Regressor.L1Regressor.bias_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 37}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 42}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 28}, "mlzero.regressors.L2Regressor": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L2Regressor.L2Regressor": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 10}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 22}, "mlzero.regressors.L2Regressor.L2Regressor.weights": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L2Regressor.L2Regressor.bias": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L2Regressor.L2Regressor.lam": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L2Regressor.L2Regressor.random_state": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L2Regressor.L2Regressor.loss_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L2Regressor.L2Regressor.weights_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L2Regressor.L2Regressor.bias_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 37}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 42}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 28}, "mlzero.regressors.baseRegressor": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.baseRegressor.BaseRegressor": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 16}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 9}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 8}, "mlzero.regressors.linearCF": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.linearCF.LinearRegressionCF": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 14}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 7}, "mlzero.regressors.linearCF.LinearRegressionCF.theta": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 31}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 28}, "mlzero.regressors.linearGD": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.linearGD.LinearRegressionGD": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 11}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 7}, "mlzero.regressors.linearGD.LinearRegressionGD.weights": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.linearGD.LinearRegressionGD.bias": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.linearGD.LinearRegressionGD.loss_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.linearGD.LinearRegressionGD.weight_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.linearGD.LinearRegressionGD.bias_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 34}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 42}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 28}, "mlzero.regressors.multipleGD": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 11}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 18}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.multipleGD.MultipleRegressionGD.random_state": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.multipleGD.MultipleRegressionGD.loss_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 34}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 42}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 28}, "mlzero.regressors.polylinear": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.polylinear.PolynomialRegression": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 10}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 29}, "mlzero.regressors.polylinear.PolynomialRegression.weights": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.polylinear.PolynomialRegression.bias": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.polylinear.PolynomialRegression.n_degree": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.polylinear.PolynomialRegression.random_state": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.polylinear.PolynomialRegression.loss_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.polylinear.PolynomialRegression.weights_history": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 43}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 38}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 42}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 34}, "mlzero.small_neural_net": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.driverMNL": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.driverMNL.SAMPLES": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.driverMNL.FEATURES": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.driverMNL.EPOCHS": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.driverMNL.LR": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.driverMNL.X": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 72, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.driverMNL.y": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.driverMNL.model": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.driverMNL.y_final": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 23, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.mnl": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 50}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.samples": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.features": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.lr": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.epochs": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.weights": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.bias": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 39}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 37}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 37}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 36}}, "length": 210, "save": true}, "index": {"qualname": {"root": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 15, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.lr": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.n_iter": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.random_state": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}}, "df": 11}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.metrics.classification.classification_metrics.accuracy": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.alpha": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 15, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.n_iter": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans.max_iterations": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"1": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.weights": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.bias": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.lam": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.random_state": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.weights_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.bias_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1}}, "df": 12}}}}}}}}}}, "2": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.weights": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.bias": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.lam": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.random_state": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.weights_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.bias_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1}}, "df": 12}}}}}}}}}}, "docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.lr": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.lr": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.lr": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.lr": {"tf": 1}, "mlzero.small_neural_net.driverMNL.LR": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.lr": {"tf": 1}}, "df": 6}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.weights": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.lr": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.random_state": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.loss_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.loss_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}}, "df": 14}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.lam": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.lam": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.lam": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {"mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.theta": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}}, "df": 5}}, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weights": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weight_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}}}, "n": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.n_iter": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.n_neighbors": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.n_classes": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.n_clusters": {"tf": 1}, "mlzero.decomposers.pca.PCA.n_components": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.n_degree": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.n_neighbors": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}, "r": {"2": {"docs": {"mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.random_state": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.random_state": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.random_state": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.random_state": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.random_state": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.random_state": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.random_state": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.random_state": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.random_state": {"tf": 1}}, "df": 9}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.random_state": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.random_state": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.random_state": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.random_state": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.random_state": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.random_state": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.random_state": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.random_state": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.random_state": {"tf": 1}}, "df": 9}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.weights": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.n_classes": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.random_state": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.lr": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.small_neural_net.driverMNL.SAMPLES": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.samples": {"tf": 1}}, "df": 2}}}}}}}, "f": {"1": {"docs": {"mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}}, "df": 18}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"mlzero.small_neural_net.driverMNL.FEATURES": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.features": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 19}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.perceptron.Perceptron": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.lr": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.epochs": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.random_state": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}}, "df": 7}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"mlzero.decomposers.pca.PCA": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.n_components": {"tf": 1}, "mlzero.decomposers.pca.PCA.components": {"tf": 1}, "mlzero.decomposers.pca.PCA.mean": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1}}, "df": 7}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.bias": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.n_degree": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.random_state": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.loss_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}}, "df": 12}}}}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1}}, "df": 4}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.bias": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.bias_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.bias": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.bias_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.bias": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.bias_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.bias": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.bias": {"tf": 1}}, "df": 12}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.n_neighbors": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.X_train": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.y_train": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}}, "df": 9}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.n_clusters": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.max_iterations": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.centroid_history": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}}, "df": 12}}}}}}, "x": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.X_train": {"tf": 1}, "mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.X_train": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.y_train": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.decomposers.pca.PCA.transform": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mlzero.regressors.linearCF.LinearRegressionCF.theta": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.y_train": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}}, "df": 7}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.decomposers.pca.PCA.n_components": {"tf": 1}, "mlzero.decomposers.pca.PCA.components": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression.n_classes": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans.n_clusters": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.clusterers.k_means.Kmeans.centroid_history": {"tf": 1}}, "df": 1, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans.centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}}, "df": 3}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression.n_degree": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"mlzero.clusterers.k_means.Kmeans.max_iterations": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.small_neural_net.driverMNL.model": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.decomposers.pca.PCA.mean": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.random_state": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.samples": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.features": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.lr": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.epochs": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.weights": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.bias": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 13}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.regressors.linearGD.LinearRegressionGD.weight_history": {"tf": 1}}, "df": 1, "s": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.weights": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.weights": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.weights": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.weights_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.weights": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.weights_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.weights": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.weights_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weights": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights_history": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.weights": {"tf": 1}}, "df": 14}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.perceptron.Perceptron.epochs": {"tf": 1}, "mlzero.small_neural_net.driverMNL.EPOCHS": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.epochs": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.weights": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.bias": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.lam": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.random_state": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.alpha": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.loss_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.weights_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.bias_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1}}, "df": 13}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.clusterers.k_means.Kmeans.centroid_history": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.loss_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.weights_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.bias_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.weights_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.bias_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.weights_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.bias_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weight_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.loss_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights_history": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"tf": 1}}, "df": 20}}}}}}}}}, "fullname": {"root": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 15, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"mlzero": {"tf": 1}, "mlzero.classifiers": {"tf": 1}, "mlzero.classifiers.adaLine": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.lr": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.n_iter": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.random_state": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}, "mlzero.classifiers.baseClassifier": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1}, "mlzero.classifiers.kNNClassifier": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.n_neighbors": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.X_train": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.y_train": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.weights": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.lr": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.random_state": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.classifiers.perceptron": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.lr": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.epochs": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.random_state": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.classifiers.softmaxregression": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.weights": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.n_classes": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.random_state": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.lr": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1}, "mlzero.clusterers": {"tf": 1}, "mlzero.clusterers.k_means": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.n_clusters": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.max_iterations": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.centroid_history": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}, "mlzero.decomposers": {"tf": 1}, "mlzero.decomposers.pca": {"tf": 1}, "mlzero.decomposers.pca.PCA": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.n_components": {"tf": 1}, "mlzero.decomposers.pca.PCA.components": {"tf": 1}, "mlzero.decomposers.pca.PCA.mean": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1}, "mlzero.metrics": {"tf": 1}, "mlzero.metrics.classification": {"tf": 1}, "mlzero.metrics.classification.classification_metrics": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.accuracy": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}, "mlzero.metrics.regression": {"tf": 1}, "mlzero.metrics.regression.regression_metrics": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}, "mlzero.regressors": {"tf": 1}, "mlzero.regressors.ElasticNet": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.weights": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.bias": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.lam": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.random_state": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.alpha": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.loss_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.weights_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.bias_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1}, "mlzero.regressors.L1Regressor": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.weights": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.bias": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.lam": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.random_state": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.weights_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.bias_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1}, "mlzero.regressors.L2Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.weights": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.bias": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.lam": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.random_state": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.weights_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.bias_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1}, "mlzero.regressors.baseRegressor": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1}, "mlzero.regressors.linearCF": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.theta": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}, "mlzero.regressors.linearGD": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weights": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weight_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}, "mlzero.regressors.multipleGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.random_state": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}, "mlzero.regressors.polylinear": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.bias": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.n_degree": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.random_state": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.loss_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net": {"tf": 1}, "mlzero.small_neural_net.driverMNL": {"tf": 1}, "mlzero.small_neural_net.driverMNL.SAMPLES": {"tf": 1}, "mlzero.small_neural_net.driverMNL.FEATURES": {"tf": 1}, "mlzero.small_neural_net.driverMNL.EPOCHS": {"tf": 1}, "mlzero.small_neural_net.driverMNL.LR": {"tf": 1}, "mlzero.small_neural_net.driverMNL.X": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y": {"tf": 1}, "mlzero.small_neural_net.driverMNL.model": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}, "mlzero.small_neural_net.mnl": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.samples": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.features": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.lr": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.epochs": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.weights": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.bias": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 210}}}}}, "a": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"mlzero.clusterers.k_means.Kmeans.max_iterations": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.decomposers.pca.PCA.mean": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1}}, "df": 3, "s": {"docs": {"mlzero.clusterers.k_means": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.n_clusters": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.max_iterations": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.centroid_history": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}}, "df": 13}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.metrics": {"tf": 1}, "mlzero.metrics.classification": {"tf": 1}, "mlzero.metrics.classification.classification_metrics": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.accuracy": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1.4142135623730951}, "mlzero.metrics.regression": {"tf": 1}, "mlzero.metrics.regression.regression_metrics": {"tf": 1.4142135623730951}, "mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1.4142135623730951}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1.4142135623730951}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1.4142135623730951}}, "df": 12}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.small_neural_net.driverMNL.model": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.regressors.multipleGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.random_state": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}}, "df": 12}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.random_state": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.samples": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.features": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.lr": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.epochs": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.weights": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.bias": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 13}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.small_neural_net.mnl": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.samples": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.features": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.lr": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.epochs": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.weights": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.bias": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 14}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers": {"tf": 1}, "mlzero.classifiers.adaLine": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.lr": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.n_iter": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.random_state": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}, "mlzero.classifiers.baseClassifier": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1}, "mlzero.classifiers.kNNClassifier": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.n_neighbors": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.X_train": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.y_train": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.weights": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.lr": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.random_state": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.classifiers.perceptron": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.lr": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.epochs": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.random_state": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.classifiers.softmaxregression": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.weights": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.n_classes": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.random_state": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.lr": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1}}, "df": 62}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.metrics.classification": {"tf": 1}, "mlzero.metrics.classification.classification_metrics": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.accuracy": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression.n_classes": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.clusterers": {"tf": 1}, "mlzero.clusterers.k_means": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.n_clusters": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.max_iterations": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.centroid_history": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}}, "df": 14}}}, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans.n_clusters": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}}, "df": 7}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.decomposers.pca.PCA.n_components": {"tf": 1}, "mlzero.decomposers.pca.PCA.components": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.clusterers.k_means.Kmeans.centroid_history": {"tf": 1}}, "df": 1, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans.centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}}, "df": 3}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.lr": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.n_iter": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.random_state": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}}, "df": 12, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.lr": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.n_iter": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.random_state": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}}, "df": 11}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.metrics.classification.classification_metrics.accuracy": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.alpha": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 15, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.n_iter": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans.max_iterations": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"1": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.regressors.L1Regressor": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.weights": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.bias": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.lam": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.random_state": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.loss_history": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.weights_history": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.bias_history": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1.4142135623730951}}, "df": 13}}}}}}}}}}, "2": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.regressors.L2Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.weights": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.bias": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.lam": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.random_state": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.loss_history": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.weights_history": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.bias_history": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1.4142135623730951}}, "df": 13}}}}}}}}}}, "docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.lr": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.lr": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.lr": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.lr": {"tf": 1}, "mlzero.small_neural_net.driverMNL.LR": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.lr": {"tf": 1}}, "df": 6}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.logisticRegression": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.weights": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.lr": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.random_state": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1.4142135623730951}}, "df": 10}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.loss_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.loss_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}}, "df": 14}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.lam": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.lam": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.lam": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {"mlzero.regressors.linearCF": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.theta": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {"mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.theta": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}}, "df": 5}}, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weights": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weight_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.regressors.linearGD": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weights": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weight_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}}, "df": 11}}}}}}}}, "n": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.n_iter": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.n_neighbors": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.n_classes": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.n_clusters": {"tf": 1}, "mlzero.decomposers.pca.PCA.n_components": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.n_degree": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.small_neural_net": {"tf": 1}, "mlzero.small_neural_net.driverMNL": {"tf": 1}, "mlzero.small_neural_net.driverMNL.SAMPLES": {"tf": 1}, "mlzero.small_neural_net.driverMNL.FEATURES": {"tf": 1}, "mlzero.small_neural_net.driverMNL.EPOCHS": {"tf": 1}, "mlzero.small_neural_net.driverMNL.LR": {"tf": 1}, "mlzero.small_neural_net.driverMNL.X": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y": {"tf": 1}, "mlzero.small_neural_net.driverMNL.model": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}, "mlzero.small_neural_net.mnl": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.samples": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.features": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.lr": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.epochs": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.weights": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.bias": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 25}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.n_neighbors": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.small_neural_net": {"tf": 1}, "mlzero.small_neural_net.driverMNL": {"tf": 1}, "mlzero.small_neural_net.driverMNL.SAMPLES": {"tf": 1}, "mlzero.small_neural_net.driverMNL.FEATURES": {"tf": 1}, "mlzero.small_neural_net.driverMNL.EPOCHS": {"tf": 1}, "mlzero.small_neural_net.driverMNL.LR": {"tf": 1}, "mlzero.small_neural_net.driverMNL.X": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y": {"tf": 1}, "mlzero.small_neural_net.driverMNL.model": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}, "mlzero.small_neural_net.mnl": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.samples": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.features": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.lr": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.epochs": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.weights": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.bias": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 24}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.naiveBayes": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}, "r": {"2": {"docs": {"mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.random_state": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.random_state": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.random_state": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.random_state": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.random_state": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.random_state": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.random_state": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.random_state": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.random_state": {"tf": 1}}, "df": 9}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.metrics.regression": {"tf": 1}, "mlzero.metrics.regression.regression_metrics": {"tf": 1.4142135623730951}, "mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1.4142135623730951}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1.4142135623730951}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1.4142135623730951}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.regressors": {"tf": 1}, "mlzero.regressors.ElasticNet": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.weights": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.bias": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.lam": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.random_state": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.alpha": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.loss_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.weights_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.bias_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1}, "mlzero.regressors.L1Regressor": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.weights": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.bias": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.lam": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.random_state": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.weights_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.bias_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1}, "mlzero.regressors.L2Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.weights": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.bias": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.lam": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.random_state": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.weights_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.bias_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1}, "mlzero.regressors.baseRegressor": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1}, "mlzero.regressors.linearCF": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.theta": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}, "mlzero.regressors.linearGD": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weights": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weight_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}, "mlzero.regressors.multipleGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.random_state": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}, "mlzero.regressors.polylinear": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.bias": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.n_degree": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.random_state": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.loss_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}}, "df": 88}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.random_state": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.random_state": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.random_state": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.random_state": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.random_state": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.random_state": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.random_state": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.random_state": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.random_state": {"tf": 1}}, "df": 9}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.softmaxregression": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.weights": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.n_classes": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.random_state": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.lr": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1.4142135623730951}}, "df": 11}}}}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.small_neural_net": {"tf": 1}, "mlzero.small_neural_net.driverMNL": {"tf": 1}, "mlzero.small_neural_net.driverMNL.SAMPLES": {"tf": 1}, "mlzero.small_neural_net.driverMNL.FEATURES": {"tf": 1}, "mlzero.small_neural_net.driverMNL.EPOCHS": {"tf": 1}, "mlzero.small_neural_net.driverMNL.LR": {"tf": 1}, "mlzero.small_neural_net.driverMNL.X": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y": {"tf": 1}, "mlzero.small_neural_net.driverMNL.model": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}, "mlzero.small_neural_net.mnl": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.samples": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.features": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.lr": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.epochs": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.weights": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.bias": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 24}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.small_neural_net.driverMNL.SAMPLES": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.samples": {"tf": 1}}, "df": 2}}}}}}}, "f": {"1": {"docs": {"mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}}, "df": 18}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"mlzero.small_neural_net.driverMNL.FEATURES": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.features": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 19}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.perceptron": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.lr": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.epochs": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.random_state": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"mlzero.decomposers.pca": {"tf": 1}, "mlzero.decomposers.pca.PCA": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.n_components": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.components": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.mean": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1.4142135623730951}}, "df": 8}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.regressors.polylinear": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.bias": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.n_degree": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.random_state": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.loss_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}}, "df": 13}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.bias": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.n_degree": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.random_state": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.loss_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}}, "df": 12}}}}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.baseClassifier": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1.4142135623730951}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.regressors.baseRegressor": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1.4142135623730951}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.bias": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.bias_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.bias": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.bias_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.bias": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.bias_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.bias": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.bias": {"tf": 1}}, "df": 12}}}}, "k": {"docs": {"mlzero.clusterers.k_means": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.n_clusters": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.max_iterations": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.centroid_history": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}}, "df": 13, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.kNNClassifier": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.n_neighbors": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.X_train": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.y_train": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1.4142135623730951}}, "df": 10}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.n_clusters": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.max_iterations": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.centroid_history": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}}, "df": 12}}}}}}, "x": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.X_train": {"tf": 1}, "mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.X_train": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.y_train": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.decomposers.pca.PCA.transform": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mlzero.regressors.linearCF.LinearRegressionCF.theta": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.y_train": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 3}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.decomposers": {"tf": 1}, "mlzero.decomposers.pca": {"tf": 1}, "mlzero.decomposers.pca.PCA": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.n_components": {"tf": 1}, "mlzero.decomposers.pca.PCA.components": {"tf": 1}, "mlzero.decomposers.pca.PCA.mean": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1}}, "df": 9}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression.n_degree": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.small_neural_net.driverMNL": {"tf": 1}, "mlzero.small_neural_net.driverMNL.SAMPLES": {"tf": 1}, "mlzero.small_neural_net.driverMNL.FEATURES": {"tf": 1}, "mlzero.small_neural_net.driverMNL.EPOCHS": {"tf": 1}, "mlzero.small_neural_net.driverMNL.LR": {"tf": 1}, "mlzero.small_neural_net.driverMNL.X": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y": {"tf": 1}, "mlzero.small_neural_net.driverMNL.model": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 9}}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.regressors.linearGD.LinearRegressionGD.weight_history": {"tf": 1}}, "df": 1, "s": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.weights": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.weights": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.weights": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.weights_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.weights": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.weights_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.weights": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.weights_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weights": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights_history": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.weights": {"tf": 1}}, "df": 14}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.perceptron.Perceptron.epochs": {"tf": 1}, "mlzero.small_neural_net.driverMNL.EPOCHS": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.epochs": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.regressors.ElasticNet": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.weights": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.bias": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.lam": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.random_state": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.alpha": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.loss_history": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.weights_history": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.bias_history": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1.4142135623730951}}, "df": 14}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.clusterers.k_means.Kmeans.centroid_history": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.loss_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.weights_history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.bias_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.weights_history": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.bias_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.loss_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.weights_history": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.bias_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.weight_history": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.loss_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights_history": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.loss_history": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.weights_history": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"tf": 1}}, "df": 20}}}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"0": {"0": {"0": {"0": {"7": {"8": {"8": {"9": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"2": {"6": {"7": {"3": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"mlzero.small_neural_net.driverMNL.LR": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"1": {"7": {"5": {"5": {"5": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"mlzero.small_neural_net.driverMNL.LR": {"tf": 1}}, "df": 1}, "1": {"0": {"0": {"docs": {"mlzero.small_neural_net.driverMNL.EPOCHS": {"tf": 1}, "mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 2}, "docs": {"mlzero.small_neural_net.driverMNL.SAMPLES": {"tf": 1}}, "df": 1}, "4": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "5": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"1": {"5": {"7": {"2": {"9": {"8": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"1": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1.7320508075688772}}, "df": 1}, "2": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1.4142135623730951}}, "df": 1}, "4": {"1": {"7": {"1": {"4": {"1": {"9": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "7": {"3": {"0": {"5": {"7": {"3": {"9": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1.7320508075688772}}, "df": 1}, "3": {"0": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "3": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "5": {"docs": {"mlzero.small_neural_net.driverMNL.y": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 2}, "6": {"docs": {"mlzero.small_neural_net.driverMNL.y": {"tf": 1}}, "df": 1}, "8": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "9": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1.4142135623730951}}, "df": 1}, "4": {"2": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "4": {"docs": {"mlzero.small_neural_net.driverMNL.y": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 2}, "6": {"7": {"6": {"3": {"4": {"4": {"5": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 3}, "8": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}, "9": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "5": {"1": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "3": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1.4142135623730951}}, "df": 1}, "5": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "8": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "9": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"0": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.driverMNL.y": {"tf": 1}}, "df": 2}, "1": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "2": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1.7320508075688772}}, "df": 1}, "3": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}, "4": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"mlzero.small_neural_net.driverMNL.FEATURES": {"tf": 1}}, "df": 1}, "7": {"0": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}, "1": {"docs": {"mlzero.small_neural_net.driverMNL.y": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 2}, "2": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "3": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "5": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1.4142135623730951}}, "df": 1}, "6": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "8": {"docs": {"mlzero.small_neural_net.driverMNL.y": {"tf": 1}}, "df": 1}, "docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "8": {"0": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1.4142135623730951}}, "df": 2}, "1": {"docs": {"mlzero.small_neural_net.driverMNL.y": {"tf": 1}}, "df": 1}, "2": {"3": {"0": {"5": {"1": {"1": {"6": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"8": {"3": {"9": {"1": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "4": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "7": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "8": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1.4142135623730951}}, "df": 1}, "9": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"mlzero.small_neural_net.driverMNL.y": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 2}, "9": {"0": {"5": {"0": {"2": {"1": {"4": {"7": {"docs": {"mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "1": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "2": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y": {"tf": 1}}, "df": 2}, "3": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}}, "df": 1}, "docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 3.3166247903554}, "mlzero.small_neural_net.driverMNL.y": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.driverMNL.model": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1.4142135623730951}}, "df": 4, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.small_neural_net.driverMNL.X": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y": {"tf": 1}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.small_neural_net.driverMNL.model": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"mlzero.small_neural_net.driverMNL.model": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.small_neural_net.driverMNL.model": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.small_neural_net.driverMNL.model": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.small_neural_net.driverMNL.model": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.small_neural_net.driverMNL.model": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"mlzero.small_neural_net.driverMNL.model": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.small_neural_net.driverMNL.model": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.small_neural_net.driverMNL.model": {"tf": 1}}, "df": 1}}}}, "signature": {"root": {"0": {"0": {"0": {"1": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}}, "df": 10}, "docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 16}, "1": {"0": {"0": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 10}, "docs": {}, "df": 0}, "docs": {"mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}}, "df": 3}, "2": {"0": {"0": {"docs": {"mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}}, "df": 2}, "3": {"9": {"docs": {"mlzero.metrics.classification.classification_metrics.precision": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {}, "df": 0}, "4": {"2": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 9}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}}, "df": 2}, "docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}}, "df": 4}, "docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 5.291502622129181}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 4.242640687119285}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 3.7416573867739413}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 3.7416573867739413}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 4.69041575982343}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 3.1622776601683795}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 4}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 4.242640687119285}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 3.7416573867739413}, "mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 4.242640687119285}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 3.4641016151377544}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 4.242640687119285}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 3.7416573867739413}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 4.242640687119285}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 3.7416573867739413}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 4.47213595499958}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 3.1622776601683795}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 5.0990195135927845}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 3.7416573867739413}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 4.69041575982343}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 4.242640687119285}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 3.7416573867739413}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 4.242640687119285}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 5.291502622129181}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 4.242640687119285}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 3.7416573867739413}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 4.898979485566356}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 5.0990195135927845}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 3.7416573867739413}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 3.7416573867739413}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 3.7416573867739413}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 4.47213595499958}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 3.7416573867739413}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 4.69041575982343}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 3.7416573867739413}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 3.7416573867739413}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 4.242640687119285}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 3.1622776601683795}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 2.8284271247461903}, "mlzero.decomposers.pca.PCA.fit": {"tf": 3.7416573867739413}, "mlzero.decomposers.pca.PCA.transform": {"tf": 3.7416573867739413}, "mlzero.metrics.classification.classification_metrics.accuracy": {"tf": 3.7416573867739413}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 5.656854249492381}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 5.656854249492381}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 5.656854249492381}, "mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 3.7416573867739413}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 3.7416573867739413}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 3.7416573867739413}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 5.291502622129181}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 4.242640687119285}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 5.830951894845301}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 3.7416573867739413}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 4.47213595499958}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 4.242640687119285}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 5.830951894845301}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 3.7416573867739413}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 4.47213595499958}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 4.242640687119285}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 5.830951894845301}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 3.7416573867739413}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 4.242640687119285}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 3.7416573867739413}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 4.242640687119285}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 2}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 4.242640687119285}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 3.7416573867739413}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 2}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 4.242640687119285}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 5.830951894845301}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 3.7416573867739413}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 3.4641016151377544}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 4.242640687119285}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 5.830951894845301}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 3.7416573867739413}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 4.47213595499958}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 3.7416573867739413}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 4.242640687119285}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 5.830951894845301}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 3.7416573867739413}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 6}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 3.7416573867739413}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 4.242640687119285}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 4.242640687119285}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 3.7416573867739413}}, "df": 84, "l": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 11}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}}, "df": 3}}}, "n": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "x": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 10}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 10}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 60}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 1}}}}}}}, "x": {"1": {"docs": {"mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}}, "df": 1}, "2": {"docs": {"mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}}, "df": 1}, "docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 54}, "y": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.accuracy": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1.4142135623730951}, "mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1.4142135623730951}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1.4142135623730951}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}}, "df": 32}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.metrics.classification.classification_metrics.accuracy": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}}, "df": 1}, "b": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.metrics.classification.classification_metrics.accuracy": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}}, "df": 8}}}}, "k": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 10}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.decomposers.pca.PCA.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "z": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}}, "df": 13}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1}}, "df": 6}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1.4142135623730951}, "mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1.4142135623730951}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1.4142135623730951}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}}, "df": 3}, "1": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 7}, "docs": {"mlzero": {"tf": 1.7320508075688772}, "mlzero.classifiers": {"tf": 1.7320508075688772}, "mlzero.classifiers.adaLine": {"tf": 1.7320508075688772}, "mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1.7320508075688772}, "mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 3}, "mlzero.classifiers.adaLine.AdaLineGD.lr": {"tf": 1.7320508075688772}, "mlzero.classifiers.adaLine.AdaLineGD.n_iter": {"tf": 1.7320508075688772}, "mlzero.classifiers.adaLine.AdaLineGD.random_state": {"tf": 1.7320508075688772}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 3.3166247903554}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 3.1622776601683795}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 3.1622776601683795}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 3.3166247903554}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 2.449489742783178}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 3}, "mlzero.classifiers.baseClassifier": {"tf": 1.7320508075688772}, "mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1.7320508075688772}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1.7320508075688772}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1.7320508075688772}, "mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1.7320508075688772}, "mlzero.classifiers.kNNClassifier": {"tf": 1.7320508075688772}, "mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1.7320508075688772}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 2.6457513110645907}, "mlzero.classifiers.kNNClassifier.kNNClassifier.n_neighbors": {"tf": 1.7320508075688772}, "mlzero.classifiers.kNNClassifier.kNNClassifier.X_train": {"tf": 1.7320508075688772}, "mlzero.classifiers.kNNClassifier.kNNClassifier.y_train": {"tf": 1.7320508075688772}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 3.3166247903554}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 3.1622776601683795}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 3.1622776601683795}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 3.1622776601683795}, "mlzero.classifiers.logisticRegression": {"tf": 1.7320508075688772}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1.7320508075688772}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 2.8284271247461903}, "mlzero.classifiers.logisticRegression.LogisticRegression.weights": {"tf": 1.7320508075688772}, "mlzero.classifiers.logisticRegression.LogisticRegression.lr": {"tf": 1.7320508075688772}, "mlzero.classifiers.logisticRegression.LogisticRegression.random_state": {"tf": 1.7320508075688772}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 3.1622776601683795}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 3.3166247903554}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 3.1622776601683795}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 3.3166247903554}, "mlzero.classifiers.naiveBayes": {"tf": 1.7320508075688772}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1.7320508075688772}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 3.1622776601683795}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 3.1622776601683795}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 3.3166247903554}, "mlzero.classifiers.perceptron": {"tf": 1.7320508075688772}, "mlzero.classifiers.perceptron.Perceptron": {"tf": 1.7320508075688772}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 3}, "mlzero.classifiers.perceptron.Perceptron.lr": {"tf": 1.7320508075688772}, "mlzero.classifiers.perceptron.Perceptron.epochs": {"tf": 1.7320508075688772}, "mlzero.classifiers.perceptron.Perceptron.random_state": {"tf": 1.7320508075688772}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 3.3166247903554}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 3.1622776601683795}, "mlzero.classifiers.softmaxregression": {"tf": 1.7320508075688772}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1.7320508075688772}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 3}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.weights": {"tf": 1.7320508075688772}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.n_classes": {"tf": 1.7320508075688772}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.random_state": {"tf": 1.7320508075688772}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.lr": {"tf": 1.7320508075688772}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 3.3166247903554}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 3.1622776601683795}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 3.1622776601683795}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 3.1622776601683795}, "mlzero.clusterers": {"tf": 1.7320508075688772}, "mlzero.clusterers.k_means": {"tf": 1.7320508075688772}, "mlzero.clusterers.k_means.Kmeans": {"tf": 1.7320508075688772}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 2.8284271247461903}, "mlzero.clusterers.k_means.Kmeans.n_clusters": {"tf": 1.7320508075688772}, "mlzero.clusterers.k_means.Kmeans.max_iterations": {"tf": 1.7320508075688772}, "mlzero.clusterers.k_means.Kmeans.centroids": {"tf": 1.7320508075688772}, "mlzero.clusterers.k_means.Kmeans.centroid_history": {"tf": 1.7320508075688772}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 3.3166247903554}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 3.3166247903554}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 3}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 3.1622776601683795}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 3.3166247903554}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 2.449489742783178}, "mlzero.decomposers": {"tf": 1.7320508075688772}, "mlzero.decomposers.pca": {"tf": 1.7320508075688772}, "mlzero.decomposers.pca.PCA": {"tf": 1.7320508075688772}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 2.6457513110645907}, "mlzero.decomposers.pca.PCA.n_components": {"tf": 1.7320508075688772}, "mlzero.decomposers.pca.PCA.components": {"tf": 1.7320508075688772}, "mlzero.decomposers.pca.PCA.mean": {"tf": 1.7320508075688772}, "mlzero.decomposers.pca.PCA.fit": {"tf": 3}, "mlzero.decomposers.pca.PCA.transform": {"tf": 3.1622776601683795}, "mlzero.metrics": {"tf": 1.7320508075688772}, "mlzero.metrics.classification": {"tf": 1.7320508075688772}, "mlzero.metrics.classification.classification_metrics": {"tf": 1.7320508075688772}, "mlzero.metrics.classification.classification_metrics.accuracy": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1.4142135623730951}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1.4142135623730951}, "mlzero.metrics.regression": {"tf": 1.7320508075688772}, "mlzero.metrics.regression.regression_metrics": {"tf": 1.7320508075688772}, "mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1.7320508075688772}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1.7320508075688772}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1.4142135623730951}, "mlzero.regressors": {"tf": 1.7320508075688772}, "mlzero.regressors.ElasticNet": {"tf": 1.7320508075688772}, "mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1.7320508075688772}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 3}, "mlzero.regressors.ElasticNet.ElasticNet.weights": {"tf": 1.7320508075688772}, "mlzero.regressors.ElasticNet.ElasticNet.bias": {"tf": 1.7320508075688772}, "mlzero.regressors.ElasticNet.ElasticNet.lam": {"tf": 1.7320508075688772}, "mlzero.regressors.ElasticNet.ElasticNet.random_state": {"tf": 1.7320508075688772}, "mlzero.regressors.ElasticNet.ElasticNet.alpha": {"tf": 1.7320508075688772}, "mlzero.regressors.ElasticNet.ElasticNet.loss_history": {"tf": 1.7320508075688772}, "mlzero.regressors.ElasticNet.ElasticNet.weights_history": {"tf": 1.7320508075688772}, "mlzero.regressors.ElasticNet.ElasticNet.bias_history": {"tf": 1.7320508075688772}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 3.3166247903554}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 3.4641016151377544}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 3.1622776601683795}, "mlzero.regressors.L1Regressor": {"tf": 1.7320508075688772}, "mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1.7320508075688772}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 2.8284271247461903}, "mlzero.regressors.L1Regressor.L1Regressor.weights": {"tf": 1.7320508075688772}, "mlzero.regressors.L1Regressor.L1Regressor.bias": {"tf": 1.7320508075688772}, "mlzero.regressors.L1Regressor.L1Regressor.lam": {"tf": 1.7320508075688772}, "mlzero.regressors.L1Regressor.L1Regressor.random_state": {"tf": 1.7320508075688772}, "mlzero.regressors.L1Regressor.L1Regressor.loss_history": {"tf": 1.7320508075688772}, "mlzero.regressors.L1Regressor.L1Regressor.weights_history": {"tf": 1.7320508075688772}, "mlzero.regressors.L1Regressor.L1Regressor.bias_history": {"tf": 1.7320508075688772}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 3.3166247903554}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 3.4641016151377544}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 3.1622776601683795}, "mlzero.regressors.L2Regressor": {"tf": 1.7320508075688772}, "mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1.7320508075688772}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 2.8284271247461903}, "mlzero.regressors.L2Regressor.L2Regressor.weights": {"tf": 1.7320508075688772}, "mlzero.regressors.L2Regressor.L2Regressor.bias": {"tf": 1.7320508075688772}, "mlzero.regressors.L2Regressor.L2Regressor.lam": {"tf": 1.7320508075688772}, "mlzero.regressors.L2Regressor.L2Regressor.random_state": {"tf": 1.7320508075688772}, "mlzero.regressors.L2Regressor.L2Regressor.loss_history": {"tf": 1.7320508075688772}, "mlzero.regressors.L2Regressor.L2Regressor.weights_history": {"tf": 1.7320508075688772}, "mlzero.regressors.L2Regressor.L2Regressor.bias_history": {"tf": 1.7320508075688772}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 3.3166247903554}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 3.4641016151377544}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 3.1622776601683795}, "mlzero.regressors.baseRegressor": {"tf": 1.7320508075688772}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1.7320508075688772}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1.7320508075688772}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1.7320508075688772}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1.7320508075688772}, "mlzero.regressors.linearCF": {"tf": 1.7320508075688772}, "mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1.7320508075688772}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1.7320508075688772}, "mlzero.regressors.linearCF.LinearRegressionCF.theta": {"tf": 1.7320508075688772}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 3.1622776601683795}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 3.1622776601683795}, "mlzero.regressors.linearGD": {"tf": 1.7320508075688772}, "mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1.7320508075688772}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1.7320508075688772}, "mlzero.regressors.linearGD.LinearRegressionGD.weights": {"tf": 1.7320508075688772}, "mlzero.regressors.linearGD.LinearRegressionGD.bias": {"tf": 1.7320508075688772}, "mlzero.regressors.linearGD.LinearRegressionGD.loss_history": {"tf": 1.7320508075688772}, "mlzero.regressors.linearGD.LinearRegressionGD.weight_history": {"tf": 1.7320508075688772}, "mlzero.regressors.linearGD.LinearRegressionGD.bias_history": {"tf": 1.7320508075688772}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 3.3166247903554}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 3.4641016151377544}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 3.1622776601683795}, "mlzero.regressors.multipleGD": {"tf": 1.7320508075688772}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1.7320508075688772}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 2.6457513110645907}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights": {"tf": 1.7320508075688772}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias": {"tf": 1.7320508075688772}, "mlzero.regressors.multipleGD.MultipleRegressionGD.random_state": {"tf": 1.7320508075688772}, "mlzero.regressors.multipleGD.MultipleRegressionGD.loss_history": {"tf": 1.7320508075688772}, "mlzero.regressors.multipleGD.MultipleRegressionGD.weights_history": {"tf": 1.7320508075688772}, "mlzero.regressors.multipleGD.MultipleRegressionGD.bias_history": {"tf": 1.7320508075688772}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 3.3166247903554}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 3.4641016151377544}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 3.1622776601683795}, "mlzero.regressors.polylinear": {"tf": 1.7320508075688772}, "mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1.7320508075688772}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 2.8284271247461903}, "mlzero.regressors.polylinear.PolynomialRegression.weights": {"tf": 1.7320508075688772}, "mlzero.regressors.polylinear.PolynomialRegression.bias": {"tf": 1.7320508075688772}, "mlzero.regressors.polylinear.PolynomialRegression.n_degree": {"tf": 1.7320508075688772}, "mlzero.regressors.polylinear.PolynomialRegression.random_state": {"tf": 1.7320508075688772}, "mlzero.regressors.polylinear.PolynomialRegression.loss_history": {"tf": 1.7320508075688772}, "mlzero.regressors.polylinear.PolynomialRegression.weights_history": {"tf": 1.7320508075688772}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 3.1622776601683795}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 3.3166247903554}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 3.4641016151377544}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 3.1622776601683795}, "mlzero.small_neural_net": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.driverMNL": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.driverMNL.SAMPLES": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.driverMNL.FEATURES": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.driverMNL.EPOCHS": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.driverMNL.LR": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.driverMNL.X": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.driverMNL.y": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.driverMNL.model": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.driverMNL.y_final": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.mnl": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 3.3166247903554}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.samples": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.features": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.lr": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.epochs": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.weights": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.bias": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.loss_history": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 3.1622776601683795}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 3.3166247903554}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 3.1622776601683795}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 3.1622776601683795}}, "df": 210, "a": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}}, "df": 5}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans": {"tf": 1}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.accuracy": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}}, "df": 2, "d": {"docs": {"mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}}, "df": 5}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.decomposers.pca.PCA": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}}, "df": 15}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "n": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 16}}}}}}}}, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 2}}, "df": 24, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}}, "df": 1, "s": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1.7320508075688772}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1.4142135623730951}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1.4142135623730951}}, "df": 49}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}}, "df": 1, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1.7320508075688772}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 67}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1.7320508075688772}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1.7320508075688772}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1.7320508075688772}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 17}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.decomposers.pca.PCA.transform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}}, "df": 28}}}}}, "o": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1.4142135623730951}}, "df": 13}, "w": {"docs": {}, "df": 0, "o": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1.7320508075688772}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}}, "df": 1}}}}}, "l": {"1": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1.4142135623730951}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}}, "df": 3}}}}}}}}}}, "2": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1.4142135623730951}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}}, "df": 3}}}}}}}}}}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}}, "df": 6, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {"mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1.4142135623730951}}, "df": 2}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 11}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 11}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1.4142135623730951}}, "df": 11}}}}, "m": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1.4142135623730951}}, "df": 7}}}}, "n": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.transform": {"tf": 2}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 2}}, "df": 8, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1.4142135623730951}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1.4142135623730951}}, "df": 4}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}}, "df": 1, "s": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1.7320508075688772}}, "df": 16}}}}}, "p": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1.4142135623730951}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1.4142135623730951}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1.7320508075688772}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1.4142135623730951}}, "df": 52}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1.4142135623730951}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1.4142135623730951}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1.7320508075688772}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1.4142135623730951}}, "df": 52}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}}, "df": 15}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}}, "df": 25}}}, "e": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}}, "df": 1}}, "p": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}}, "df": 1, "d": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}}, "df": 2}, "s": {"docs": {"mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}}, "df": 23}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}}, "df": 23}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}}, "df": 1}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1.4142135623730951}}, "df": 2, "+": {"1": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1.7320508075688772}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1.7320508075688772}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1.4142135623730951}}, "df": 47, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.decomposers.pca.PCA": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1.4142135623730951}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.__init__": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}}, "df": 33}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1.4142135623730951}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1.7320508075688772}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 68}}}}}, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 18, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 17}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.regressors.baseRegressor.BaseRegressor.predict": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.decomposers.pca.PCA.transform": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.decomposers.pca.PCA": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}}, "df": 4}, "a": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}}, "df": 1}, "b": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}}, "df": 5, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.perceptron.Perceptron": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}}, "df": 3}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {"mlzero.decomposers.pca.PCA": {"tf": 1}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}}, "df": 3}}}, "f": {"1": {"docs": {"mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}}, "df": 26}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1.4142135623730951}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.decomposers.pca.PCA": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 41, "m": {"docs": {"mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}}, "df": 1}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}}, "df": 16, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 1, "s": {"docs": {"mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 8}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 11}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 10}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 56}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1.4142135623730951}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1}}, "df": 12}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.decomposers.pca.PCA": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}}, "df": 1}}}}}, "^": {"2": {"docs": {"mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.regressors.L2Regressor.L2Regressor": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.get_params": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.__init__": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1.4142135623730951}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1.7320508075688772}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1.4142135623730951}}, "df": 33}, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}}, "df": 5}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}}, "df": 1, "s": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"mlzero.decomposers.pca.PCA.transform": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 10}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.__init__": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.__init__": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.__init__": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.__init__": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.__init__": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.__init__": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 10}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}}, "df": 3}}, "t": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1.4142135623730951}}, "df": 1}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1.4142135623730951}}, "df": 8}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier.score": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.accuracy": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor.score": {"tf": 1}}, "df": 7}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1.4142135623730951}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.decomposers.pca.PCA.fit": {"tf": 1}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1.4142135623730951}}, "df": 6}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}, "x": {"1": {"docs": {"mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}}, "df": 1}, "2": {"docs": {"mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}}, "df": 1}, "docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.fit": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.forward": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.predict": {"tf": 1}}, "df": 49}, "y": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}}, "df": 21}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}}, "df": 3, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.predict": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.fit": {"tf": 1}}, "df": 27}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.fit": {"tf": 1}, "mlzero.classifiers.adaLine.AdaLineGD.set_params": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.fit": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.logisticRegression.LogisticRegression.fit": {"tf": 1.4142135623730951}, "mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.L1Regressor.L1Regressor.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.L2Regressor.L2Regressor.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.linearGD.LinearRegressionGD.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.fit": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.fit": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.__init__": {"tf": 1.4142135623730951}}, "df": 10}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.metrics.regression.regression_metrics.mean_absolute_error": {"tf": 1}, "mlzero.metrics.regression.regression_metrics.mean_squared_error": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1.4142135623730951}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1.4142135623730951}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1.4142135623730951}}, "df": 9}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1.4142135623730951}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.regressors.ElasticNet.ElasticNet": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.fit": {"tf": 1}}, "df": 3}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}, "mlzero.regressors.linearCF.LinearRegressionCF.fit": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.calc_loss": {"tf": 1}, "mlzero.regressors.L1Regressor.L1Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.L2Regressor.L2Regressor.calc_loss": {"tf": 1}, "mlzero.regressors.linearGD.LinearRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.multipleGD.MultipleRegressionGD.calc_loss": {"tf": 1}, "mlzero.regressors.polylinear.PolynomialRegression.calc_loss": {"tf": 1}}, "df": 9}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.activation": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.sigmoid": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD.compute_loss": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.decomposers.pca.PCA": {"tf": 1}}, "df": 1, "s": {"docs": {"mlzero.decomposers.pca.PCA.__init__": {"tf": 1.4142135623730951}, "mlzero.decomposers.pca.PCA.transform": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.metrics.regression.regression_metrics.r2_score": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1.7320508075688772}, "mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.classifiers.baseClassifier.BaseClassifier.predict": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.majority_count": {"tf": 1.4142135623730951}, "mlzero.classifiers.kNNClassifier.kNNClassifier.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict_proba": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1.7320508075688772}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.class_conditional": {"tf": 2}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.fit": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict_proba": {"tf": 1.4142135623730951}, "mlzero.classifiers.softmaxregression.SoftmaxRegression.predict": {"tf": 1.4142135623730951}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier.fit": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron": {"tf": 1}, "mlzero.classifiers.softmaxregression.SoftmaxRegression": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.accuracy": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}}, "df": 10}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1.4142135623730951}, "mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"mlzero.clusterers.k_means.Kmeans": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.regressors.linearCF.LinearRegressionCF": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.clusterers.k_means.Kmeans.assign_centroids": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.history": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.set_initial": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.move_centroids": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"mlzero.classifiers.perceptron.Perceptron.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"mlzero.regressors.polylinear.PolynomialRegression.featureTransform": {"tf": 1}, "mlzero.small_neural_net.mnl.MultiNeuronLinearGD": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.net_input": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.classifiers.adaLine.AdaLineGD.predict": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression": {"tf": 1}, "mlzero.classifiers.logisticRegression.LogisticRegression.predict": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron": {"tf": 1}, "mlzero.classifiers.perceptron.Perceptron.predict": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.precision": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.recall": {"tf": 1}, "mlzero.metrics.classification.classification_metrics.f1_score": {"tf": 1}}, "df": 8}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.calc_distance": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.euclideanDist": {"tf": 1}, "mlzero.regressors.ElasticNet.ElasticNet.__init__": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.classifiers.naiveBayes.NaiveBayesClassifier": {"tf": 1}, "mlzero.classifiers.naiveBayes.NaiveBayesClassifier.fit": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.baseClassifier.BaseClassifier": {"tf": 1}, "mlzero.regressors.baseRegressor.BaseRegressor": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"mlzero.clusterers.k_means.Kmeans.history": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "n": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier.fit": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"mlzero.classifiers.kNNClassifier.kNNClassifier": {"tf": 1}, "mlzero.classifiers.kNNClassifier.kNNClassifier.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"mlzero.clusterers.k_means.Kmeans": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.__init__": {"tf": 1}, "mlzero.clusterers.k_means.Kmeans.fit_predict": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"mlzero.decomposers.pca.PCA.__init__": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {"mlzero.classifiers.softmaxregression.SoftmaxRegression.softmax": {"tf": 1.4142135623730951}}, "df": 1}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();